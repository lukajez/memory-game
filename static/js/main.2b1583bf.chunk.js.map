{"version":3,"sources":["static/style-config.js","utilities/Responsivness.utilities.js","containers/Landing/components/ApplicationTitleAndLogo/ApplicationTitleAndLogoStyled.js","static/icons/logo.svg","containers/Landing/components/ApplicationTitleAndLogo/ApplicationTitleAndLogo.jsx","containers/Landing/components/Navigation/NavigationMenuStyled.js","containers/Landing/components/Navigation/Navigation.jsx","router/Router.helpers.js","static/images/default-background-image.png","components/Container/ContainerStyled.js","static/images/bottom-left.svg","static/images/top-right.svg","components/CornerItemStyled/CornerItemStyled.js","components/Container/Container.jsx","containers/Landing/Landing.jsx","store/modules/Gameplay/action-types.js","store/modules/Gameplay/actions.js","static/images/card-background-image.jpg","containers/Game/components/GameCard/GameCardStyled.js","containers/Game/components/GameCard/GameCard.jsx","hooks/useTimer.jsx","utilities/Time.utilities.js","components/Timer/Timer.jsx","containers/Game/components/GameOver/GameOverStyled.js","components/ControlItem/ControlItem.js","static/images/control-left.svg","static/images/control-right.svg","containers/Game/components/GameOver/GameOver.jsx","hooks/useHolderWidth.jsx","utilities/UI.utilities.js","components/Avatar/AvatarStyled.js","components/Avatar/Avatar.jsx","components/AvatarInfo/AvatarInfoStyled.js","components/AvatarInfo/AvatarInfo.jsx","components/GameAvatar/components/GameAvatarButton.jsx","components/GameAvatar/GameAvatarStyled.js","components/GameAvatar/GameAvatar.jsx","containers/Game/Game.jsx","static/images/previous.svg","static/images/following.svg","components/Indicators/Indicators.jsx","components/DifficultiesMenu/DifficultiesMenuStyled.js","components/DifficultiesMenu/DifficultiesMenu.jsx","store/modules/Users/actions.js","containers/GameSetup/components/DifficultySelection.jsx","components/AvatarMenu/AvatarMenuStyled.js","static/images/avatars/avatar-one.png","static/videos/avatar-one-vid.webm","static/images/avatars/avatar-two.png","static/videos/avatar-two-vid.webm","static/images/avatars/avatar-three.png","static/videos/avatar-three-vid.webm","constants/Memorize.constants.js","components/AvatarMenu/AvatarMenu.jsx","components/UsernameField/UsernameFieldStyled.js","components/UsernameField/UsernameField.jsx","hooks/useMoveOffset.jsx","containers/GameSetup/components/AvatarSelection.jsx","containers/GameSetup/GameSetup.jsx","containers/Ranking/RankingStyled.js","containers/PlayerChoose/components/PlayerChooseSection.jsx","containers/PlayerChoose/PlayerChoose.jsx","containers/Ranking/Ranking.jsx","router/routes.js","router/RouterSwitch.jsx","App.jsx","reportWebVitals.js","static/images/cards/card-1.png","static/images/cards/card-2.png","static/images/cards/card-3.png","static/images/cards/card-4.png","static/images/cards/card-5.png","static/images/cards/card-6.png","static/images/cards/card-7.png","static/images/cards/card-8.png","static/images/cards/card-9.png","static/images/cards/card-10.png","static/images/cards/card-11.png","static/images/cards/card-12.png","static/images/cards/card-13.png","static/images/cards/card-14.png","static/images/cards/card-15.png","helpers/Memorize.helpers.js","store/modules/Gameplay/action-resolvers.js","store/modules/Gameplay/reducer.js","utilities/LocalStorage.utilities.js","helpers/Store.helpers.js","store/modules/Users/action-resolvers.js","store/modules/Users/reducer.js","store/Memorize.reducers.store.js","utilities/Store.utilities.js","store/Memorize.store.js","mock/mock.js","index.js"],"names":["BREAKPOINTS_MIN_PER_DEVICE","Object","freeze","phone","tablet","desktop","wideScreenDesktop","bigScreenDesktop","getScssMediaOnlyRule","minWidth","maxWidth","generatedScssMediaOnlyRules","BreakpointsMin","devices","keys","length","slice","reduce","createdScssRules","currentDevice","currentIndex","phoneMediaRule","tabletMediaRule","TitleAndLogoContainerStyled","styled","div","centered","ApplicationTitleAndLogo","ApplicationTitleAndLogoStyled","className","src","LOGO","alt","LandingPageNavigationMenuStyled","ul","MENU_ITEMS","title","path","Navigation","history","useHistory","NavigationMenuStyled","map","menuItem","onClick","redirectTo","routes","findIndex","push","handleRedirection","ContainerStyled","horizontalAlign","verticalAlign","DEFAULT_BACKGROUND_IMAGE","CORNER_ITEM_OFFSET","CORNER_ITEM_OFFSET_PHONE","TOP_RIGHT_CORNER_ITEM_POSITION","right","top","BOTTOM_LEFT_CORNER_ITEM_POSITION","left","bottom","TOP_RIGHT_CORNER_ITEM_POSITION_PHONE","BOTTOM_LEFT_CORNER_ITEM_POSITION_PHONE","CornerItemStyled","img","itemPosition","Container","children","areCornerItemsVisible","id","TOP_RIGHT","BOTTOM_LEFT","Landing","GameplayActionTypes","gameSetupType","flipCardType","compareFlippedCardType","restartGameType","calculatePointsType","setGameEndType","CommonProperties","CARD_BACKGROUND_IMAGE","GameCardStyled","isActive","backgroundImageUrl","GameCard","card","cardId","flipped","discovered","image","dispatch","useDispatch","flipCard","type","payload","useTimer","startTime","shouldStop","useState","currentTime","setCurrentTime","useEffect","timeout","setTimeout","moment","Date","timestamp","date","hours","getHours","minutes","getMinutes","seconds","getSeconds","getTimeFormat","getTime","clearTimeout","TimePartStyled","span","TimeHolderStyled","Timer","setGameEnd","useCallback","gameEnd","GameOverStyled","TitleStyled","GameInfoHolder","SingleInfoHolder","GameInfoLabelStyled","GameInfoStyled","CotnrolItemInfo","position","transform","LEFT_ITEM_POSITION","RIGHT_ITEM_POSITION","ControlItemStyled","GameOver","difficulty","points","gueses","restartGame","useSelector","state","gameplay","gameInfo","info","label","handleControlItemClick","event","target","name","style","background","ControlItem","CONTROL_LEFT","CONTROL_RIGHT","windowResize","height","window","innerHeight","width","innerWidth","useHolderWidth","dimensions","setDimensions","handleResize","addEventListener","removeEventListener","getHolderWidth","screenCoverage","screenWidth","cardWidth","AvatarStyled","li","isActiveItem","opacity","filter","getStyle","Avatar","playVideo","currentActiveAvatar","video","handleAvatarClick","poster","autoPlay","loop","muted","AvatarInfoHolder","SingleInfoStyled","LabelStyled","InfoStyled","AvatarInfo","avatarInfo","singleInfo","ButtonStyled","GameAvatarButton","handleClickGameAvatarButton","viewBox","d","fill","stroke","strokeWidth","GameAvatarStyled","AvatarDetails","Divider","GameAvatar","currentActiveUser","isAvatarActive","setIsAvatarActive","avatar","username","toUpperCase","score","CardsHolder","Game","cards","isGameEnd","flippedCards","numberOfGuesses","gameStart","users","gameSetup","compareFlippedCards","calculatePoints","updateScoreForCurrentlyActiveUser","calculatePointsAndUpdateUserScore","compareTimer","cardNumber","Indicator","active","getCustomStyle","IndicatorsHolder","Indicators","number","currentActive","indicators","index","indicator","renderIndicators","DifficultyMenuHolder","DifficultyTitle","difficultyMenu","DifficultiesMenu","action","currentFocusedDifficulty","setCurrentFocusedDifficulty","setDifficulty","changeDifficulty","direction","isLeftClickedAndDifficultyIsFirst","isLeftClickedAndDifficultyIsLast","indexOffset","PREVIOUS","FOLLOWING","setCurrentlyActiveUserDifficulty","sortUsersByOrderAndDifficulty","order","DifficultySection","InfoTextStyled","DifficultySelection","marginTop","textAlign","AvatarMenuHolder","AvatarMenuStyled","moveOffsetX","ButtonsHolderStyled","AVATARS","AVATAR_ONE_IMG","AVATAR_ONE_VID","AVATAR_TWO_IMG","AVATAR_TWO_VID","AVATAR_THREE_IMG","AVATAR_THREE_VID","DEFAULT_ANIMATIONS","currentElementClass","usernameClass","activeAvatarClass","NO_ANIMATIONS","ANIMATION_PAIRS","AvatarMenu","setShowUsernameField","showUsernameField","setClasses","classes","moveOffset","setCurrentActiveAvatar","validationErrorMessage","setAvatarForCurrentlyActiveUser","validateCurrentUsername","changeAvatar","isLeftClickedAndAvatarIsFirst","isLeftClickedAndAvatarIsLast","animationClasses","newState","renderingAvatars","currentAvatar","avatarHTMLElement","UsernameFieldStyled","input","ErrorMessageHolder","UsernameField","setUsernameForCurrentlyActiveUser","placeholder","defaultValue","onChange","newUsername","value","handleOnInputChange","useMoveOffset","moveOffsetMap","setMoveOffset","handleWindowSize","moveOffsetDevice","AvatarSection","MOVE_OFFSET_MAP","AvatarSelection","ROUTER_PUSH_MAP","GameSetup","currentStep","setCurrentStep","areControlsVisible","setAreControlsVisible","addUserInAllUsers","checkIfControlsShouldBeVisible","isRightControlVisible","setState","changeStepTimer","AvatarHolder","RankingStyled","FilterSectionStyled","ChooseOtherUserHolder","PlayerChoosSectionStyled","PlayerChooseSection","focused","isFocused","setIsFocused","allUsers","handleUserItemClick","clickedUserData","switchSteps","newCurrentActiveUser","renderSingleAvatar","user","onMouseEnter","onMouseLeave","PlayerChoose","Ranking","ranking","rank","component","DEFAULT_ROUTE_OPTIONS","RouterSwitch","doesDestinationPathExist","route","exact","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","NUMBER_OF_UNIQUE_CARDS_BY_DIFFICULTY_LEVEL","generateGameCards","gameCards","uniqueCards","getUniqueCards","cardOneId","cardTwoId","gameCardOne","pair","gameCardTwo","shuffleGameCards","Array","_","getSingleUniqueCard","randomIndex","shuffledGameCards","numberOfItems","floor","Math","random","randomNumber","IMAGE_INDEX_MAP","0","CARD_ONE","1","CARD_TWO","2","CARD_THREE","3","CARD_FOUR","4","CARD_FIVE","5","CARD_SIX","6","CARD_SEVEN","7","CARD_EIGHT","8","CARD_NINE","9","CARD_TEN","10","CARD_ELEVEN","11","CARD_TWELVE","12","CARD_THREETEN","13","CARD_FOURTEEN","14","CARD_FIFTEEN","gameSetupResolver","currentState","POINTS_CALCULATOR_BY_DIFFICULTY","actionResolvers","currentFlippedCards","currentCards","currentNumberOfGuesses","areTwoCardsFlipped","isClickedCardAlreadyFlipped","newCards","newFlippedCards","newNumberOfGuesses","clickedCardIndex","newFlippedCard","cardIndex","flipCardResolver","firstCardIndex","firstCard","secondCardIndex","secondCard","isMatch","item","compareFlippedCardsResolver","restartGameResolver","ratio","rationInPercentage","pointsValue","multiplyBy","initialState","gameplayReducer","actionResolver","saveStateIntoLocalStorage","key","hasOwnProperty","JSON","stringify","localStorage","setItem","loadStateFromLocalStorage","loadedState","stateFromLocalStorage","getItem","parse","error","validationRules","lengthRule","rule","message","validateUsername","minLength","maxLength","usernameLength","errorMessage","checkIfUserAlreadyExist","toLowerCase","getSortByOrder","itemOne","itemTwo","clearCurrentActiveUser","newUsers","setNewCurrentActiveUser","currentScore","restUserData","earnedCurrentGamePoints","newScore","newUser","userIndex","newAllUsers","newRanking","sort","userOne","updatedCurrentActiveUser","setDifficultyForCurrentlyActiveUser","setTotalGamesPlayedForCurrentlyActiveUser","setTotalGamesFinishedForCurrentlyActiveUser","userTwo","sortUsersByOrderAndDifficultyResolver","reducers","PERSISTED_MODULE_KEYS","rootReducer","combineReducers","persistedState","moduleKey","getPersistedState","easy","medium","hard","store","createStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2b1583bf.chunk.js","sourcesContent":["export const BACKGROUND_DEFAULT_COLOR = '#212121'\r\n\r\nexport const TEXT_DEFAULT_COLOR = '#fff'\r\n\r\nexport const TEXT_DEFAULT_SIZE = '16px'\r\n\r\nexport const CAPTION_TEXT_DEFAULT_COLOR = 'red'\r\n\r\nexport const CAPTION_TEXT_DEFAULT_SIZE = '24px' // convert to rems\r\n\r\nexport const INFO_TEXT_DEFAULT_COLOR = 'grey'\r\n\r\nexport const INFO_TEXT_DEFAULT_SIZE = '16px' // convert to rems\r\n\r\nexport const OPTION_TEXT_DEFAULT_COLOR = 'white'\r\n\r\nexport const OPTION_TEXT_DEFAULT_SIZE = '16px' // convert to rems\r\n\r\nexport const BACKGROUND_DEFAULT_IMAGE_PATH = '~images/default-background-image.png'\r\n\r\nexport const BREAKPOINTS_MIN_PER_DEVICE = Object.freeze({\r\n  phone: 1,\r\n  tablet: 768,\r\n  desktop: 1024,\r\n  wideScreenDesktop: 1440,\r\n  bigScreenDesktop: 1920\r\n})\r\n","import { BREAKPOINTS_MIN_PER_DEVICE } from '~static/style-config'\r\n\r\nconst getScssMediaOnlyRule = ({ minWidth, maxWidth } = {}) =>\r\n  minWidth && maxWidth\r\n    ? `@media only screen and (min-width: ${minWidth}px) and (max-width: ${maxWidth}px)`\r\n    : ''\r\n\r\n/**\r\n * @private\r\n * @immidietlyinvoked\r\n * @description\r\n * This anonymous function returns scss media only rules per device\r\n *\r\n * @param {Object} BreakpointsMin is map of minimal widths for devices\r\n *\r\n * @returns {Object}\r\n */\r\nconst generatedScssMediaOnlyRules = ((BreakpointsMin = BREAKPOINTS_MIN_PER_DEVICE) => {\r\n  const devices = Object.keys(BreakpointsMin)\r\n  const { length } = devices\r\n\r\n  return devices.slice(0, length - 1).reduce((createdScssRules, currentDevice, currentIndex) => {\r\n    const minWidth = BreakpointsMin[currentDevice]\r\n    const maxWidth = BreakpointsMin[devices[currentIndex + 1]] - 1\r\n\r\n    createdScssRules[currentDevice] = getScssMediaOnlyRule({ minWidth, maxWidth })\r\n\r\n    return createdScssRules\r\n  }, {})\r\n})(BREAKPOINTS_MIN_PER_DEVICE)\r\n\r\nexport default generatedScssMediaOnlyRules\r\n","import generatedScssMediaOnlyRules from '~utilities/Responsivness.utilities.js'\r\nimport styled from 'styled-components'\r\n\r\nconst {\r\n  phone: phoneMediaRule,\r\n  tablet: tabletMediaRule\r\n} = generatedScssMediaOnlyRules\r\n\r\nconst TitleAndLogoContainerStyled = styled.div`\r\n  margin: ${({ centered }) => centered ? 'auto' : '26px'} auto;\r\n\r\n  ${phoneMediaRule} {\r\n    margin: 26px auto;\r\n  }\r\n\r\n  ${tabletMediaRule} {\r\n    margin: 50px auto;\r\n  }\r\n`\r\n\r\nexport default TitleAndLogoContainerStyled\r\n","export default __webpack_public_path__ + \"static/media/logo.1412d429.svg\";","import ApplicationTitleAndLogoStyled from './ApplicationTitleAndLogoStyled'\r\nimport LOGO from '~static/icons/logo.svg'\r\n\r\nconst ApplicationTitleAndLogo = ({ centered }) => {\r\n  return (\r\n    <ApplicationTitleAndLogoStyled centered={centered} className=\"flex-column\">\r\n      <img src={LOGO} className=\"app-logo\" alt=\"logo\" />\r\n      <span className=\"title title-size-140\">MEMORIZE</span>\r\n      <span className=\"info-text info-text-size-42\">MEMORY GAME FOR REAL PLAYERS</span>\r\n    </ApplicationTitleAndLogoStyled>\r\n  )\r\n}\r\n\r\nexport default ApplicationTitleAndLogo\r\n","import generatedScssMediaOnlyRules from '~utilities/Responsivness.utilities.js'\r\nimport styled from 'styled-components'\r\n\r\nconst { phone } = generatedScssMediaOnlyRules\r\n\r\nconst LandingPageNavigationMenuStyled = styled.ul`\r\n  position: absolute;\r\n  bottom: 80px;\r\n  left: 100px;\r\n  font-family: Staatliches;\r\n  font-size: 36px;\r\n  /* height: 400px; */\r\n  width: 250px;\r\n  list-style: none;\r\n  color: #fff;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  \r\n  li {\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin: 14px 0;\r\n    transition: .2s ease;\r\n    cursor: pointer;\r\n  }\r\n  \r\n  li:hover {\r\n    color: #B22028;\r\n  }\r\n\r\n  ${phone} {\r\n    font-size: 24px;\r\n    /* height: 300px; */\r\n    width: 150px;\r\n    top: calc(50% - 150px + 50px); // height of an title and logo container + 50px random choosed offset\r\n    left: calc(50% - 75px);\r\n    align-items: center;\r\n  }\r\n`\r\n\r\nexport default LandingPageNavigationMenuStyled\r\n","import { useHistory } from 'react-router'\r\nimport { handleRedirection } from '~router/Router.helpers'\r\nimport NavigationMenuStyled from './NavigationMenuStyled'\r\n\r\nconst MENU_ITEMS = [\r\n  {\r\n    title: 'New Game',\r\n    path: '/game-setup'\r\n  },\r\n  {\r\n    title: `Continue`,\r\n    path: '/player-choose'\r\n  },\r\n  {\r\n    title: 'Ranking',\r\n    path: '/ranking'\r\n  }\r\n]\r\n\r\nconst Navigation = () => {\r\n  const history = useHistory()\r\n\r\n  return (\r\n    <NavigationMenuStyled>\r\n      {\r\n        MENU_ITEMS.map(menuItem =>\r\n          <li\r\n            onClick={() => handleRedirection(history, menuItem?.path)}\r\n            key={menuItem?.title}\r\n          >\r\n            { menuItem?.title }\r\n          </li>\r\n        )\r\n      }\r\n    </NavigationMenuStyled>\r\n  )\r\n}\r\n\r\nexport default Navigation\r\n","import routes from '~routes'\r\n\r\nexport const handleRedirection = (history = {}, redirectTo = '') => {\r\n  const doesRouteExist = ~routes.findIndex(({ path }) => redirectTo === path)\r\n\r\n  if (doesRouteExist) {\r\n    history.push(redirectTo)\r\n  }\r\n}\r\n","export default __webpack_public_path__ + \"static/media/default-background-image.fcd4d2ea.png\";","import styled from 'styled-components'\r\nimport DEFAULT_BACKGROUND_IMAGE from '~images/default-background-image.png'\r\nimport { TEXT_DEFAULT_COLOR, TEXT_DEFAULT_SIZE } from '~static/style-config'\r\n\r\nconst ContainerStyled = styled.div`\r\n  position: relative;\r\n  min-height: 100vh;\r\n  width: 100vw;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: ${({ horizontalAlign = 'flex-start' }) => horizontalAlign};\r\n  justify-content: ${({ verticalAlign = 'flex-start' }) => verticalAlign};\r\n  font-size: ${TEXT_DEFAULT_SIZE};\r\n  /* background-image: url(${DEFAULT_BACKGROUND_IMAGE}); */\r\n  background-size: 100vw;\r\n  background-repeat: repeat;\r\n  background-position: top;\r\n  color: ${TEXT_DEFAULT_COLOR};\r\n  overflow-x: hidden;\r\n  overflow-y: auto;\r\n  /* transform: translate3d(0,0,0); */\r\n  backface-visibility: hidden;\r\n  transform-style: preserve-3d;\r\n  background-color: #1a1a1a;\r\n`\r\n\r\nexport default ContainerStyled\r\n","export default __webpack_public_path__ + \"static/media/bottom-left.7fce35a5.svg\";","export default __webpack_public_path__ + \"static/media/top-right.54c936ea.svg\";","import generatedScssMediaOnlyRules from '~utilities/Responsivness.utilities.js'\r\nimport styled from 'styled-components'\r\n\r\nconst CORNER_ITEM_OFFSET = '20px'\r\nconst CORNER_ITEM_OFFSET_PHONE = '5px'\r\n\r\nconst TOP_RIGHT_CORNER_ITEM_POSITION = {\r\n  right: CORNER_ITEM_OFFSET,\r\n  top: CORNER_ITEM_OFFSET\r\n}\r\n\r\nconst BOTTOM_LEFT_CORNER_ITEM_POSITION = {\r\n  left: CORNER_ITEM_OFFSET,\r\n  bottom: CORNER_ITEM_OFFSET\r\n}\r\n\r\nconst TOP_RIGHT_CORNER_ITEM_POSITION_PHONE = {\r\n  right: CORNER_ITEM_OFFSET_PHONE,\r\n  top: CORNER_ITEM_OFFSET_PHONE\r\n}\r\n\r\nconst BOTTOM_LEFT_CORNER_ITEM_POSITION_PHONE = {\r\n  left: CORNER_ITEM_OFFSET_PHONE\r\n  // top: '100%'\r\n}\r\n\r\nconst { phone: phoneMediaRule } = generatedScssMediaOnlyRules\r\n\r\nconst CornerItemStyled = styled.img`\r\n  position: absolute;\r\n  ${({ itemPosition = 'bottom-left' }) => itemPosition === 'top-right' ? TOP_RIGHT_CORNER_ITEM_POSITION : BOTTOM_LEFT_CORNER_ITEM_POSITION};\r\n\r\n  \r\n  ${phoneMediaRule} {\r\n    ${({ itemPosition = 'bottom-left' }) => itemPosition === 'top-right' ? TOP_RIGHT_CORNER_ITEM_POSITION_PHONE : BOTTOM_LEFT_CORNER_ITEM_POSITION_PHONE};\r\n  }\r\n`\r\n\r\nexport default CornerItemStyled\r\n","import ContainerStyled from './ContainerStyled'\r\nimport BOTTOM_LEFT from '~static/images/bottom-left.svg'\r\nimport TOP_RIGHT from '~static/images/top-right.svg'\r\nimport CornerItemStyled from '../CornerItemStyled/CornerItemStyled'\r\n\r\nconst Container = ({ children, verticalAlign, horizontalAlign, areCornerItemsVisible = true }) => (\r\n  <ContainerStyled id=\"background-image\" verticalAlign={verticalAlign} horizontalAlign={horizontalAlign}>\r\n    {\r\n      areCornerItemsVisible &&\r\n      <>\r\n        <CornerItemStyled itemPosition=\"top-right\" src={TOP_RIGHT} alt=\"top-right\" />\r\n        <CornerItemStyled itemPosition=\"bottom-left\" src={BOTTOM_LEFT} alt=\"top-right\" />\r\n      </>\r\n    }\r\n    { children }\r\n  </ContainerStyled>\r\n)\r\n\r\nexport default Container\r\n","import ApplicationTitleAndLogo from './components/ApplicationTitleAndLogo/ApplicationTitleAndLogo'\r\nimport Navigation from './components/Navigation/Navigation'\r\nimport Container from '~components/Container/Container'\r\n\r\nconst Landing = () => {\r\n  return (\r\n    <Container>\r\n      <Navigation />\r\n      <ApplicationTitleAndLogo centered={true} />\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Landing\r\n","const GameplayActionTypes = {\r\n  gameSetupType: 'GAME_SETUP',\r\n  flipCardType: 'FLIP_CARD',\r\n  compareFlippedCardType: 'COMPARE_FLIPPED_CARDS',\r\n  restartGameType: 'RESTART_GAME',\r\n  calculatePointsType: 'CALCULATE_POINTS',\r\n  setGameEndType: 'SET_GAME_END'\r\n}\r\n\r\nexport default GameplayActionTypes\r\n","import GameplayActionTypes from './action-types'\r\n\r\nconst {\r\n  gameSetupType,\r\n  flipCardType,\r\n  compareFlippedCardType,\r\n  restartGameType,\r\n  calculatePointsType,\r\n  setGameEndType\r\n} = GameplayActionTypes\r\n\r\nexport const gameSetupAction = payload => ({\r\n  type: gameSetupType,\r\n  payload\r\n})\r\n\r\nexport const flipCardAction = payload => ({\r\n  type: flipCardType,\r\n  payload\r\n})\r\n\r\nexport const compareFlippedCardsAction = () => ({\r\n  type: compareFlippedCardType\r\n})\r\n\r\nexport const restartGameAction = payload => ({\r\n  type: restartGameType,\r\n  payload\r\n})\r\n\r\nexport const calculatePointsAction = payload => ({\r\n  type: calculatePointsType,\r\n  payload\r\n})\r\n\r\nexport const setGameEndAction = payload => ({\r\n  type: setGameEndType,\r\n  payload\r\n})\r\n","export default __webpack_public_path__ + \"static/media/card-background-image.1da978a5.jpg\";","import generatedScssMediaOnlyRules from '~utilities/Responsivness.utilities'\r\nimport CARD_BACKGROUND_IMAGE from '~images/card-background-image.jpg'\r\nimport styled from 'styled-components'\r\n\r\nconst { phone: phoneMediaRule } = generatedScssMediaOnlyRules\r\n\r\nconst getBackgroundImage = url => ({ 'background-image': `url(${url})` })\r\n\r\nconst CommonProperties = `\r\nposition: absolute;\r\nwidth: 100%;\r\nheight: 100%;\r\n-webkit-backface-visibility: hidden;\r\nbackface-visibility: hidden;\r\nborder: 10px solid #333333;\r\nborder-image: url(${CARD_BACKGROUND_IMAGE}) 30;\r\nbox-sizing: border-box;\r\nbackground-repeat: no-repeat;\r\nbackface-visibility: hidden;\r\n`\r\n\r\nconst GameCardStyled = styled.div`\r\nposition: relative;\r\nheight: 200px;\r\nwidth: 200px;\r\nmargin: 10px;\r\ntransition: transform .4s, box-shadow .2s ease;\r\ntransform-style: preserve-3d;\r\ntransform: ${({ isActive }) => isActive && 'rotateY(180deg)'};\r\nbox-shadow: 0px 0px 20px rgba(178, 32, 40, .1);\r\nz-index: 99999;\r\nperspective: 1000px;\r\ntransform-style: preserve-3d;\r\n\r\n:hover {\r\n  box-shadow: 0px 0px 20px rgba(178, 32, 40, .8);\r\n}\r\n\r\n.card-inner {\r\n  height: 100%;\r\n  width: 100%;\r\n  position: relative;\r\n  transform-style: preserve-3d;\r\n}\r\n\r\n#cover, #content {\r\n  ${CommonProperties}\r\n}\r\n\r\n#cover {\r\n  background: url(${CARD_BACKGROUND_IMAGE});\r\n  border-image: url(${CARD_BACKGROUND_IMAGE}) 30;\r\n  background-size: 126%;\r\n  background-position: 53% 48%;\r\n}\r\n\r\n#content {\r\n  transform: rotateY(180deg);\r\n  ${({ backgroundImageUrl }) => getBackgroundImage(backgroundImageUrl)};\r\n  background-size: contain;\r\n  background-position: center;\r\n  background-color: #232323;\r\n}\r\n\r\n${phoneMediaRule} {\r\n  height: 100px;\r\n  width: 100px;\r\n}\r\n`\r\n\r\nexport default GameCardStyled\r\n","import { flipCardAction } from '~store/modules/Gameplay/actions'\r\nimport GameCardStyled from './GameCardStyled'\r\nimport { useDispatch } from 'react-redux'\r\n\r\nconst GameCard = ({\r\n    card: {\r\n      cardId = '',\r\n      flipped = false,\r\n      discovered = false,\r\n      image\r\n    }\r\n  }) => {\r\n\r\n  const dispatch = useDispatch()\r\n  const flipCard = () => dispatch(flipCardAction({ cardId }))\r\n\r\n  const handleCardClick = () => {\r\n    if (!flipped || !discovered) {\r\n      flipCard()\r\n    }\r\n  }\r\n\r\n  return (\r\n    <GameCardStyled\r\n      isActive={flipped || discovered}\r\n      backgroundImageUrl={image}\r\n      onClick={() => handleCardClick()}\r\n    >\r\n      <div className=\"card-inner\">\r\n        <div id=\"cover\" />\r\n        <div id=\"content\" />\r\n      </div>\r\n    </GameCardStyled>\r\n  )\r\n}\r\n\r\nexport default GameCard\r\n","import { getTimeFormat } from '~utilities/Time.utilities'\r\nimport { useState, useEffect } from 'react'\r\n\r\nconst useTimer = ({ startTime, shouldStop }) => {\r\n  const [currentTime, setCurrentTime] = useState({})\r\n  useEffect(() => {\r\n    let timeout\r\n\r\n    if (!shouldStop) {\r\n      timeout = setTimeout(() => {\r\n        const moment = new Date()\r\n        setCurrentTime(getTimeFormat(moment.getTime() - startTime.getTime()))\r\n      }, 1000)\r\n    }\r\n\r\n    return () => clearTimeout(timeout)\r\n  }, [\r\n    startTime,\r\n    shouldStop,\r\n    currentTime\r\n  ])\r\n\r\n  return [currentTime]\r\n}\r\n\r\nexport default useTimer\r\n","export const getTimeFormat = timestamp => {\r\n  const date = new Date(timestamp + 1000)\r\n\r\n  const hours = `0${date.getHours() - 1}`.slice(-2)\r\n  const minutes = `0${date.getMinutes()}`.slice(-2)\r\n  const seconds = `0${date.getSeconds()}`.slice(-2)\r\n  \r\n  return {\r\n    hours,\r\n    minutes,\r\n    seconds\r\n  }\r\n}\r\n\r\nexport const delaySetState = ({ setterMethod, newState, delay }) => {\r\n}\r\n","import styled from 'styled-components'\r\nimport useTimer from '~hooks/useTimer'\r\nimport { useCallback, useEffect } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { setGameEndAction } from '~store/modules/Gameplay/actions'\r\n\r\nconst TimePartStyled = styled.span`\r\n  width: 30%;\r\n  font-size: 24px;\r\n`\r\n\r\nconst TimeHolderStyled = styled.div`\r\n  display: flex;\r\n  width: 100px;\r\n  margin-top: 40px;\r\n\r\n  span {\r\n    font-size: 24px;\r\n    margin: 0 2px;\r\n  }\r\n`\r\n\r\nconst Timer = ({ startTime, shouldStop }) => {\r\n  const [currentTime] = useTimer({ startTime, shouldStop })\r\n\r\n  const dispatch = useDispatch()\r\n  const setGameEnd = useCallback(() => dispatch(setGameEndAction({ gameEnd: currentTime })), [dispatch, currentTime])\r\n\r\n  useEffect(() => {\r\n    if (shouldStop) {\r\n      setGameEnd()\r\n    }\r\n  }, [shouldStop, setGameEnd])\r\n\r\n  return (\r\n    <TimeHolderStyled>\r\n      <TimePartStyled>{currentTime.hours || '00'}</TimePartStyled>\r\n      <span>:</span>\r\n      <TimePartStyled>{currentTime.minutes || '00'}</TimePartStyled>\r\n      <span>:</span>\r\n      <TimePartStyled>{currentTime.seconds || '00'}</TimePartStyled>\r\n    </TimeHolderStyled>\r\n  )\r\n}\r\n\r\nexport default Timer\r\n","import styled from 'styled-components'\r\nimport generatedScssMediaOnlyRules from '~utilities/Responsivness.utilities'\r\n\r\nconst { phone: phoneMediaRule } = generatedScssMediaOnlyRules\r\n\r\nexport const GameOverStyled = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  height: 400px;\r\n  width: 600px;\r\n  position: absolute;\r\n  left: calc(50% - 300px);\r\n  top: calc(50% - 200px);\r\n  background: linear-gradient(180deg, #121212 0%, rgba(10, 10, 10, 0) 100%);\r\n  backdrop-filter: blur(20px);\r\n  border-radius: 10px 10px 0px 0px;\r\n\r\n  ${phoneMediaRule} {\r\n    width: 100%;\r\n    height: 100vh;\r\n    left: 0%;\r\n    top: 0%;\r\n    top: 0;\r\n    position: fixed;\r\n  }\r\n`\r\n\r\nexport const TitleStyled = styled.span`\r\n  font-family: 'Staatliches';\r\n  font-size: 24px;\r\n  color: #B22028;\r\n  margin: 20px 0;\r\n`\r\n\r\nexport const GameInfoHolder = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  margin-top: 10px;\r\n`\r\n\r\nexport const SingleInfoHolder = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  margin: 10px;\r\n`\r\n\r\nexport const GameInfoLabelStyled = styled.span`\r\n  font-family: 'SulphurPoint-Regular';\r\n  font-size: 18px;\r\n  color: #757575;\r\n`\r\n\r\nexport const GameInfoStyled = styled.span`\r\n  font-family: 'Staatliches';\r\n  font-size: 24px;\r\n  color: #FFFFFF;\r\n`\r\n\r\nexport const CotnrolItemInfo = styled.span`\r\n  font-family: 'SulphurPoint-Regular';\r\n  font-size: 18px;\r\n  line-height: 18px;\r\n  text-align: center;\r\n  color: #FFFFFF;\r\n  position: absolute;\r\n  top: 50%;\r\n  ${({ position }) => position === 'left' ? { transform: 'rotate(90deg)', left: '6px' } : { transform: 'rotate(270deg)', right: '6px' }}\r\n`\r\n","import styled from 'styled-components'\r\n\r\nconst LEFT_ITEM_POSITION = {\r\n  top: 'calc(50% - 52px)',\r\n  left: 0\r\n}\r\n\r\nconst RIGHT_ITEM_POSITION = {\r\n  top: 'calc(50% - 52px)',\r\n  right: 0\r\n}\r\n\r\nconst ControlItemStyled = styled.img`\r\n  height: 120px;\r\n  position: fixed;\r\n  top: calc(50% - 52px);\r\n  ${({ position = 'left' }) => position === 'left' ? LEFT_ITEM_POSITION : RIGHT_ITEM_POSITION};\r\n  z-index: 999;\r\n`\r\n\r\nexport default ControlItemStyled\r\n","export default __webpack_public_path__ + \"static/media/control-left.09009527.svg\";","export default __webpack_public_path__ + \"static/media/control-right.a7e08fb5.svg\";","import {\r\n  GameInfoHolder,\r\n  GameInfoLabelStyled,\r\n  GameInfoStyled,\r\n  GameOverStyled,\r\n  SingleInfoHolder,\r\n  TitleStyled,\r\n  CotnrolItemInfo\r\n} from './GameOverStyled'\r\nimport ControlItemStyled from '~components/ControlItem/ControlItem'\r\nimport CONTROL_LEFT from '~static/images/control-left.svg'\r\nimport CONTROL_RIGHT from '~static/images/control-right.svg'\r\nimport { useHistory } from 'react-router'\r\nimport { useCallback } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { restartGameAction } from '~store/modules/Gameplay/actions'\r\n\r\nconst GameOver = ({ difficulty = '', points = 0, gueses = 0 }) => {\r\n  const dispatch = useDispatch()\r\n  const restartGame = useCallback(() => dispatch(restartGameAction({ difficulty })), [dispatch, difficulty])\r\n\r\n  const { gameEnd } = useSelector(state => state.gameplay)\r\n\r\n  const gameInfo = [\r\n    { info: difficulty, label: 'DIFFICULTY' },\r\n    { info: points, label: 'POINTS EARNED' },\r\n    { info: gueses, label: 'NUMBER OF GUESSES' },\r\n    { info: gameEnd, label: 'GAME DURATION' },\r\n  ]\r\n\r\n  const history = useHistory()\r\n\r\n  const handleControlItemClick = event => {\r\n    const { target: { name: action } } = event\r\n\r\n    if (action === 'play-again') {\r\n      restartGame()\r\n    } else {\r\n      restartGame()\r\n      history.push('landing')\r\n    }\r\n  }\r\n\r\n  return (\r\n    <GameOverStyled>\r\n      <TitleStyled>\r\n        YOU’VE SUCCSESSFULLY FINISHED GAME\r\n      </TitleStyled>\r\n      <GameInfoHolder>\r\n        {\r\n          gameInfo.map(({ label, info }) =>\r\n            <SingleInfoHolder key={label}>\r\n              <GameInfoLabelStyled>{label}</GameInfoLabelStyled>\r\n              <GameInfoStyled>{info}</GameInfoStyled>\r\n            </SingleInfoHolder>\r\n          )\r\n        }\r\n      </GameInfoHolder>\r\n      <div style={{ background: `url('/static/media/card-background-image.1da978a5.jpg')`}} />\r\n      <CotnrolItemInfo position={'left'}>Main Menu</CotnrolItemInfo>\r\n      <ControlItemStyled\r\n        name=\"main-menu\"\r\n        src={CONTROL_LEFT}\r\n        position={'left'}\r\n        onClick={event => handleControlItemClick(event)}\r\n      />\r\n      <CotnrolItemInfo\r\n        position={'right'}\r\n      >\r\n        Play Again\r\n      </CotnrolItemInfo>\r\n      <ControlItemStyled\r\n        name=\"play-again\"\r\n        src={CONTROL_RIGHT}\r\n        position={'right'}\r\n        onClick={event => handleControlItemClick(event)}\r\n      />\r\n    </GameOverStyled>\r\n  )\r\n}\r\n\r\nexport default GameOver\r\n","import { useState, useEffect } from 'react'\r\n\r\nconst windowResize = () => ({\r\n  height: window.innerHeight,\r\n  width: window.innerWidth\r\n})\r\n\r\nconst useHolderWidth = () => {\r\n  const [dimensions, setDimensions] = useState(windowResize())\r\n\r\n  useEffect(() => {\r\n    const handleResize = () => {\r\n      setDimensions(windowResize())\r\n    }\r\n\r\n    window.addEventListener('resize', handleResize)\r\n    return () => window.removeEventListener('resize', handleResize)\r\n  }, [])\r\n\r\n  return [dimensions]\r\n}\r\n\r\nexport default useHolderWidth\r\n","export const getHolderWidth = (screenCoverage, screenWidth, cardWidth) => ({\r\n  width: ~~(screenCoverage * (screenWidth / cardWidth)) * cardWidth\r\n})\r\n","import generatedScssMediaOnlyRules from '~utilities/Responsivness.utilities'\r\nimport CARD_BACKGROUND_IMAGE from '~images/card-background-image.jpg'\r\nimport styled from 'styled-components'\r\n\r\nconst { phone: phoneMediaRule } = generatedScssMediaOnlyRules\r\n\r\nexport const AvatarHolder = styled.div`\r\n  position: fixed;\r\n  left: calc(50% - 200px);\r\n\r\n  ${({ isActive = true }) =>\r\n    isActive ?\r\n      { bottom: '0px', height: '250px' }\r\n      : { bottom: '0px', height: '30px' }\r\n  };\r\n\r\n  width: 400px;\r\n  transition: .3s ease;\r\n\r\n  .avatar {\r\n    transition: .1s ease;\r\n    ${({ isActive = true }) => isActive ? { 'opacity': '1' } : { 'opacity': '0' }};\r\n  }\r\n\r\n  #button-background {\r\n    transition: .3s ease;\r\n    ${({ isActive = true }) => isActive ? { 'fill': '#121212 !important' } : { 'fill': '#6B1C21 !important' }};\r\n  }\r\n\r\n  #button-icon {\r\n    transition: .3s ease;\r\n    ${({ isActive = true }) => isActive ? { 'transform': 'rotate(180deg)' } : { 'transform': 'rotate(0deg)' }};\r\n  }\r\n\r\n  z-index: 99999;\r\n`\r\n\r\nconst getStyle = isActiveItem => ({\r\n  opacity: isActiveItem ? 1 : .6,\r\n  filter: `blur(${isActiveItem ? '0px' : '6px'})`,\r\n  transform: isActiveItem ? 'scale(1)' : 'scale(.9)',\r\n  'box-shadow': `0px 0px 20px ${\r\n    isActiveItem ?\r\n      'rgba(178, 32, 40, .8)'\r\n      : 'rgba(178, 32, 40, 0)'\r\n    }`\r\n})\r\n\r\nconst generateBackgroundImage = url => ({ 'background-image': `url(${url})` })\r\n\r\nexport const AvatarStyled = styled.li`\r\n  height: 400px;\r\n  width: 330px;\r\n  margin: 5px;\r\n  ${({ backgroundImageUrl }) => generateBackgroundImage(backgroundImageUrl)};\r\n  background-repeat: no-repeat;\r\n  background-position: center;\r\n  background-size: cover;\r\n  position: relative;\r\n  transition: transform .2s, opacity .2s ease;\r\n  ${({ isActiveItem }) => getStyle(isActiveItem)};\r\n  border: 10px solid #333333;\r\n  border-image: url(${CARD_BACKGROUND_IMAGE}) 30;\r\n  box-sizing: border-box;\r\n  list-style: none;\r\n\r\n  video {\r\n    width: 100%;\r\n    height: 100%;\r\n    position: absolute;\r\n    object-fit: cover;\r\n    object-position: top;\r\n    opacity: ${({ isActiveItem }) => isActiveItem ? '1' : '.6'};\r\n  }\r\n\r\n  ${phoneMediaRule} {\r\n    height: 270px;\r\n    width: 220px;\r\n  }\r\n`\r\n","import { AvatarStyled } from './AvatarStyled'\r\n// import AVATAR_ONE_IMG from '../static/images/avatars/avatar-one.png'\r\n\r\nconst Avatar = ({\r\n  isActiveItem,\r\n  className,\r\n  playVideo,\r\n  currentActiveAvatar: {\r\n    image,\r\n    video\r\n  } = {},\r\n  handleAvatarClick = () => ({})\r\n}) => {\r\n  const avatarClickHandler = () => handleAvatarClick()\r\n\r\n  return (\r\n  <AvatarStyled\r\n    className={className}\r\n    onClick={() => isActiveItem && avatarClickHandler()}\r\n    isActiveItem={isActiveItem}\r\n    backgroundImageUrl={image}\r\n  >\r\n    {\r\n      playVideo &&\r\n      <video\r\n        src={video}\r\n        poster={image}\r\n        type=\"video/webm\"\r\n        autoPlay\r\n        loop\r\n        muted\r\n      />\r\n    }\r\n  </AvatarStyled>\r\n)}\r\n\r\nexport default Avatar\r\n","import styled from 'styled-components'\r\nimport generatedScssMediaOnlyRules from '~utilities/Responsivness.utilities'\r\n\r\nexport const { phone: phoneMediaRule } = generatedScssMediaOnlyRules\r\n\r\nexport const AvatarInfoHolder = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\n\r\nexport const SingleInfoStyled = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin: 10px 0 ;\r\n`\r\n\r\nexport const LabelStyled = styled.span`\r\n  font-size: 18px;\r\n  color: #A6A6A6;\r\n  \r\n  ${phoneMediaRule} {\r\n    font-size: 12px;\r\n  }\r\n`\r\n\r\nexport const InfoStyled = styled.span`\r\n  font-size: 24px;\r\n  color: #FFFFFF;\r\n\r\n  ${phoneMediaRule} {\r\n    font-size: 16px;\r\n  }\r\n`\r\n","import {\r\n  AvatarInfoHolder,\r\n  SingleInfoStyled,\r\n  LabelStyled,\r\n  InfoStyled\r\n} from './AvatarInfoStyled'\r\n\r\nconst AvatarInfo = ({ avatarInfo }) => {\r\n  return (\r\n    <AvatarInfoHolder>\r\n      {\r\n        avatarInfo.map(singleInfo => (\r\n          <SingleInfoStyled key={singleInfo.label}>\r\n            <LabelStyled>{singleInfo.label}</LabelStyled>\r\n            <InfoStyled>{singleInfo.info}</InfoStyled>\r\n          </SingleInfoStyled>\r\n        ))\r\n      }\r\n    </AvatarInfoHolder>\r\n  )\r\n}\r\n\r\nexport default AvatarInfo\r\n","import styled from 'styled-components'\r\n\r\nconst ButtonStyled = styled.div`\r\n  margin: 0 auto;\r\n  position: relative;\r\n  height: 30px;\r\n  width: 136px;\r\n\r\n  #button-background {\r\n    position: absolute;\r\n    left: calc(50% - 68px);\r\n    top: calc(50% - 13px);\r\n  }\r\n\r\n  #button-icon {\r\n    position: absolute;\r\n    bottom: 6px;\r\n    left: calc(50% - 16px);\r\n  }\r\n`\r\n\r\nconst GameAvatarButton = ({ handleClickGameAvatarButton }) => (\r\n  <ButtonStyled onClick={() => handleClickGameAvatarButton()}>\r\n    <svg id=\"button-background\" width=\"136\" height=\"29\" viewBox=\"0 0 136 29\">\r\n      <path d=\"M103.05 2.93316e-05L135.1 28.8751L-1.6065e-06 28.8751L32.025 7.8357e-05L103.05 2.93316e-05Z\" />\r\n    </svg>\r\n    <svg id=\"button-icon\" width=\"33\" height=\"19\" viewBox=\"0 0 33 19\" fill=\"none\">\r\n      <path d=\"M11.0498 13.6251L8.5498 17.1251L2.5498 17.1251L9.5498 9.62512L16.5498 16.1251L18.5498 13.6251\" stroke=\"white\" strokeWidth=\"2\" />\r\n      <path d=\"M12.5498 6.62512L16.5498 2.12512L21.5498 6.62512L16.5498 12.1251\" stroke=\"white\" strokeWidth=\"2\" />\r\n      <path d=\"M14.5498 9.12512L16.5498 6.62512\" stroke=\"white\" strokeWidth=\"2\" />\r\n      <path d=\"M20.0498 12.6251L24.5498 17.1251L30.5498 17.1251L23.5498 9.12512L20.0498 12.6251Z\" stroke=\"white\" strokeWidth=\"2\" />\r\n    </svg>\r\n  </ButtonStyled>\r\n)\r\n\r\n\r\nexport default GameAvatarButton\r\n","import generatedScssMediaOnlyRules from '~utilities/Responsivness.utilities'\r\nimport styled from 'styled-components'\r\n\r\nconst { phone: phoneMediaRule } = generatedScssMediaOnlyRules\r\n\r\nexport const GameAvatarStyled = styled.div`\r\n  position: fixed;\r\n  left: calc(50% - 300px);\r\n\r\n  ${({ isActive = true }) =>\r\n    isActive ?\r\n      { bottom: '0px', height: '480px' }\r\n      : { bottom: '0px', height: '30px' }\r\n  };\r\n\r\n  width: 600px;\r\n  transition: .3s ease;\r\n\r\n  .avatar {\r\n    transition: .1s ease;\r\n    ${({ isActive = true }) => isActive ? { 'opacity': '1' } : { 'opacity': '0' }};\r\n  }\r\n\r\n  #button-background {\r\n    transition: .3s ease;\r\n    ${({ isActive = true }) => isActive ? { 'fill': '#121212 !important' } : { 'fill': '#6B1C21 !important' }};\r\n  }\r\n\r\n  #button-icon {\r\n    transition: .3s ease;\r\n    ${({ isActive = true }) => isActive ? { 'transform': 'rotate(180deg)' } : { 'transform': 'rotate(0deg)' }};\r\n  }\r\n\r\n  z-index: 99999;\r\n\r\n  ${phoneMediaRule} {\r\n    width: 100%;\r\n    ${({ isActive = true }) =>\r\n      isActive ?\r\n        { bottom: '0px', height: '400px' }\r\n        : { bottom: '0px', height: '30px' }\r\n    };\r\n    left: 0;\r\n  }\r\n`\r\n\r\nexport const AvatarDetails = styled.div`\r\n  display: flex;\r\n  height: 480px;\r\n  width: 100%;\r\n  background: linear-gradient(180deg, rgba(18, 18, 18, 1), rgba(10, 10, 10, .6));\r\n  padding: 20px;\r\n  box-sizing: border-box;\r\n`\r\n\r\nexport const Divider = styled.div`\r\n  width: 20px;\r\n`\r\n","import { useState } from 'react'\r\nimport Avatar from '~components/Avatar/Avatar'\r\nimport AvatarInfo from '~components/AvatarInfo/AvatarInfo'\r\nimport GameAvatarButton from './components/GameAvatarButton'\r\nimport {\r\n  GameAvatarStyled,\r\n  AvatarDetails,\r\n  Divider\r\n} from './GameAvatarStyled'\r\n\r\nconst GameAvatar = ({\r\n  currentActiveUser,\r\n  difficulty,\r\n  points,\r\n  gueses\r\n}) => {\r\n  const [isAvatarActive, setIsAvatarActive] = useState(false)\r\n\r\n  const handleClickGameAvatarButton = () => {\r\n    setIsAvatarActive(!isAvatarActive)\r\n  }\r\n\r\n  return (\r\n    <GameAvatarStyled isActive={isAvatarActive}>\r\n      <GameAvatarButton handleClickGameAvatarButton={handleClickGameAvatarButton} />\r\n      <AvatarDetails>\r\n        <Avatar\r\n          isActiveItem={true}\r\n          className=\"avatar\"\r\n          currentActiveAvatar={currentActiveUser?.avatar}\r\n        />\r\n        <Divider />\r\n        <AvatarInfo\r\n          avatarInfo={[\r\n            { info: currentActiveUser?.username || '', label: 'USERNAME' },\r\n            { info: difficulty?.toUpperCase() || '', label: 'DIFFICULTY' },\r\n            { info: currentActiveUser?.score ? currentActiveUser?.score[difficulty] : 0, label: 'TOTAL SCORE' },\r\n            { info: points || 0, label: 'GAME POINTS' },\r\n            { info: gueses ? gueses / 2 : 0, label: 'GUESSES' }\r\n          ]}\r\n        />\r\n      </AvatarDetails>\r\n    </GameAvatarStyled>\r\n  )\r\n}\r\n\r\nexport default GameAvatar\r\n","import GameCard from './components/GameCard/GameCard'\r\nimport Container from '~components/Container/Container'\r\nimport Timer from '~components/Timer/Timer'\r\nimport { useEffect, useCallback } from 'react'\r\nimport { useHistory } from 'react-router'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {\r\n  gameSetupAction,\r\n  compareFlippedCardsAction,\r\n  calculatePointsAction\r\n} from '~store/modules/Gameplay/actions'\r\nimport styled from 'styled-components'\r\nimport generatedScssMediaOnlyRules from '~utilities/Responsivness.utilities'\r\nimport GameOver from './components/GameOver/GameOver'\r\nimport useHolderWidth from '~hooks/useHolderWidth'\r\nimport { getHolderWidth } from '~utilities/UI.utilities'\r\nimport CONTROL_LEFT from '~static/images/control-left.svg'\r\nimport ControlItemStyled from '~components/ControlItem/ControlItem'\r\nimport GameAvatar from '~components/GameAvatar/GameAvatar'\r\n\r\nconst { phone: phoneMediaRule } = generatedScssMediaOnlyRules\r\n\r\n// #region STYLED COMPONENTS\r\nconst CardsHolder = styled.div`\r\n  height: auto;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  align-items: center;\r\n  margin: 40px 0 80px 0;\r\n  perspective: 1000px;\r\n  backface-visibility: hidden;\r\n  transform-style: preserve-3d;\r\n\r\n  ${({ dimensions: { width } }) => getHolderWidth(.9, width, 220)}\r\n\r\n  ${phoneMediaRule} {\r\n    ${({ dimensions: { width } }) => getHolderWidth(.9, width, 120)}\r\n  }\r\n`\r\n// #endregion\r\n\r\nconst Game = () => {\r\n  const history = useHistory()\r\n  const [dimensions] = useHolderWidth()\r\n  const dispatch = useDispatch()\r\n\r\n  // state map\r\n  const {\r\n    cards,\r\n    isGameEnd,\r\n    flippedCards,\r\n    points,\r\n    numberOfGuesses,\r\n    gameStart\r\n  } = useSelector(({ gameplay } = {}) => gameplay) || {}\r\n  const { currentActiveUser } = useSelector(({ users } = {}) => users) || {}\r\n  const { difficulty } = currentActiveUser || {}\r\n\r\n  // actions map\r\n  const gameSetup = useCallback(() => dispatch(gameSetupAction({ difficulty })), [dispatch, difficulty])\r\n\r\n  const compareFlippedCards = useCallback(() => dispatch(compareFlippedCardsAction()), [dispatch])\r\n\r\n  const calculatePoints = useCallback(() => dispatch(calculatePointsAction({ difficulty })), [dispatch, difficulty])\r\n\r\n  const updateScoreForCurrentlyActiveUser = useCallback(score => dispatch({ type: 'UPADTE_CURRENTLY_ACTIVE_USER_SCORE', payload: { score } }), [dispatch])\r\n\r\n  const calculatePointsAndUpdateUserScore = useCallback(() => {\r\n    calculatePoints()\r\n    updateScoreForCurrentlyActiveUser(points)\r\n  }, [\r\n    calculatePoints,\r\n    updateScoreForCurrentlyActiveUser,\r\n    points\r\n  ])\r\n\r\n  useEffect(() => {\r\n    gameSetup()\r\n    // eslint-disable-next-line\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    let compareTimer\r\n\r\n    if (flippedCards.length === 2) {\r\n      compareTimer = setTimeout(() => {\r\n        compareFlippedCards()\r\n      }, 700)\r\n    }\r\n\r\n    return () => clearTimeout(compareTimer)\r\n  }, [flippedCards, compareFlippedCards])\r\n\r\n  useEffect(() => {\r\n    if (isGameEnd) {\r\n      calculatePointsAndUpdateUserScore()\r\n    }\r\n  }, [calculatePointsAndUpdateUserScore, isGameEnd])\r\n\r\n  const handleControlItemClick = event => {\r\n    const { target: { name: path } } = event\r\n    history.push(path)\r\n  }\r\n\r\n  return (\r\n    <Container\r\n      horizontalAlign='center'\r\n      areCornerItemsVisible={true}\r\n      verticalAlign={'center'}\r\n    >\r\n      {\r\n        !isGameEnd &&\r\n        <ControlItemStyled\r\n          name=\"landing\"\r\n          src={CONTROL_LEFT}\r\n          position={'left'}\r\n          onClick={event => handleControlItemClick(event)}\r\n        />\r\n      }\r\n      <Timer startTime={gameStart} shouldStop={isGameEnd} />\r\n      <CardsHolder cardNumber={cards.length} dimensions={dimensions}>\r\n        { cards.map((card = {}) => <GameCard card={card} key={card.cardId} />) }\r\n      </CardsHolder>\r\n      { isGameEnd && <GameOver difficulty={difficulty} points={points} gueses={numberOfGuesses} /> }\r\n      <GameAvatar\r\n        currentActiveUser={currentActiveUser}\r\n        difficulty={difficulty}\r\n        points={points}\r\n        gueses={numberOfGuesses}\r\n      />\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Game\r\n","export default __webpack_public_path__ + \"static/media/previous.dc3cf0c3.svg\";","export default __webpack_public_path__ + \"static/media/following.2d140b0a.svg\";","import styled from 'styled-components'\r\n\r\nconst getCustomStyle = active => ({\r\n  'background-color': active ? '#B22028' : 'transparent',\r\n  'border': `1px solid ${active ?'#B22028' : '#fff'}`,\r\n  'transform': `rotate(45deg) scale(${active ? 1.6 : 1})`\r\n})\r\n\r\nconst Indicator = styled.div`\r\n  height: 8px;\r\n  width: 8px;\r\n  ${({ active }) => getCustomStyle(active)};\r\n  margin: auto 10px;\r\n  transition: transform .4s;\r\n`\r\n\r\nconst IndicatorsHolder = styled.div`\r\n  display: flex;\r\n`\r\n\r\nconst Indicators = ({ className, number, currentActive }) => {\r\n  const renderIndicators = () => {\r\n    const indicators = []\r\n\r\n    for (let index = 0; index < number; index++) {\r\n      const indicator = <Indicator active={currentActive === index} key={index} />\r\n\r\n      indicators.push(indicator)\r\n    }\r\n\r\n    return indicators\r\n  }\r\n  return (\r\n    <IndicatorsHolder className={className}>\r\n      { renderIndicators() }\r\n    </IndicatorsHolder>\r\n  )\r\n}\r\n\r\nexport default Indicators\r\n","import generatedScssMediaOnlyRules from '~utilities/Responsivness.utilities.js'\r\nimport styled from 'styled-components'\r\n\r\nconst { phone: phoneMediaRule } = generatedScssMediaOnlyRules\r\n\r\nexport const DifficultyMenuHolder = styled.div`\r\ndisplay: flex;\r\njustify-content: center;\r\nalign-items: center;\r\nmargin: 20px;\r\nz-index: 9999;\r\n\r\nbutton {\r\n  width: 60px;\r\n}\r\n`\r\n\r\nexport const DifficultyTitle = styled.div`\r\ndisplay: flex;\r\nmin-width: 280px;\r\nfont-size: 48px;\r\nfont-weight: 900;\r\n\r\n${phoneMediaRule} {\r\n  min-width: 150px;\r\n  font-size: 30px;\r\n}\r\n\r\nspan {\r\n  margin: 0 auto;\r\n}\r\n`\r\n","import PREVIOUS from '~static/images/previous.svg'\r\nimport FOLLOWING from '~static/images/following.svg'\r\nimport Indicators from '../Indicators/Indicators'\r\nimport { useEffect, useState, useCallback } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport {\r\n  DifficultyMenuHolder,\r\n  DifficultyTitle\r\n} from './DifficultiesMenuStyled'\r\n\r\nconst difficultyMenu = [\r\n  { type: 'easy' },\r\n  { type: 'medium' },\r\n  { type: 'hard' }\r\n]\r\n\r\nconst DifficultiesMenu = ({ action }) => {\r\n  const [currentFocusedDifficulty, setCurrentFocusedDifficulty] = useState({ index: 1, type: difficultyMenu[1].type })\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const setDifficulty = useCallback(difficulty => dispatch(action({ difficulty })), [dispatch, action])\r\n\r\n  const changeDifficulty = event => {\r\n    const { target: { name: direction } } = event\r\n\r\n    const isLeftClickedAndDifficultyIsFirst = direction === 'left' && currentFocusedDifficulty.index === 0\r\n    const isLeftClickedAndDifficultyIsLast = direction === 'right' && currentFocusedDifficulty.index === difficultyMenu.length - 1\r\n\r\n    if (isLeftClickedAndDifficultyIsFirst || isLeftClickedAndDifficultyIsLast) {\r\n      return\r\n    }\r\n\r\n    const indexOffset = direction === 'left' ? -1 : 1\r\n    setCurrentFocusedDifficulty(({ index }) =>\r\n      ({ index: index + indexOffset, type: difficultyMenu[index + indexOffset].type }))\r\n  }\r\n\r\n  useEffect(() => {\r\n    setDifficulty(currentFocusedDifficulty.type)\r\n  }, [setDifficulty, currentFocusedDifficulty])\r\n\r\n  return (\r\n    <>\r\n      <DifficultyMenuHolder>\r\n        <img src={PREVIOUS} alt=\"prev\" name=\"left\" onClick={event => changeDifficulty(event)} />\r\n          <DifficultyTitle>\r\n            <span>{currentFocusedDifficulty?.type?.toUpperCase()}</span>\r\n          </DifficultyTitle>\r\n        <img src={FOLLOWING} alt=\"next\" name=\"right\" onClick={event => changeDifficulty(event)} />\r\n      </DifficultyMenuHolder>\r\n      <Indicators number={difficultyMenu.length} currentActive={currentFocusedDifficulty.index} />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default DifficultiesMenu\r\n","import UsersActionsTypes from './actions-types'\r\n\r\nconst {\r\n  addUserInAllUsersType,\r\n  setNewCurrentActiveUserType,\r\n  updateCurrentlyActiveUserScoreType,\r\n  setCurrentlyActiveUserAvatarType,\r\n  setCurrentlyActiveUserUsernameType,\r\n  setCurrentlyActiveUserDifficultyType,\r\n  chackIfUserAlreadyExistType,\r\n  sortUsersRankingByOrderAndDifficultyType,\r\n  validateCurrentUsernameType\r\n} = UsersActionsTypes\r\n\r\nexport const setCurrentlyActiveUserDifficulty = payload => ({\r\n  type: 'SET_CURRENTLY_ACTIVE_USER_DIFFICULTY',\r\n  payload\r\n})\r\n\r\nexport const sortUsersByOrderAndDifficulty = payload => ({\r\n  type: 'SORT_USERS_RANKING_BY_ORDER_AND_DIFFICULTY',\r\n  payload: { ...payload, order: 'desc' }\r\n})\r\n\r\nexport const addUserInAllUsersAction = payload => ({\r\n  type: addUserInAllUsersType,\r\n  payload\r\n})\r\n\r\nexport const setNewCurrentActiveUserAction = payload => ({\r\n  type: setNewCurrentActiveUserType,\r\n  payload\r\n})\r\n\r\nexport const updateCurrentlyActiveUserScoreAction = payload => ({\r\n  type: updateCurrentlyActiveUserScoreType,\r\n  payload\r\n})\r\n\r\nexport const setCurrentlyActiveUserAvatarAction = payload => ({\r\n  type: setCurrentlyActiveUserAvatarType,\r\n  payload\r\n})\r\n\r\nexport const setCurrentlyActiveUserUsernameAction = payload => ({\r\n  type: setCurrentlyActiveUserUsernameType,\r\n  payload\r\n})\r\n\r\nexport const setCurrentlyActiveUserDifficultyAction = payload => ({\r\n  type: setCurrentlyActiveUserDifficultyType,\r\n  payload\r\n})\r\n\r\nexport const chackIfUserAlreadyExistAction = payload => ({\r\n  type: chackIfUserAlreadyExistType,\r\n  payload\r\n})\r\n\r\nexport const sortUsersRankingByOrderAndDifficultyAction = payload => ({\r\n  type: sortUsersRankingByOrderAndDifficultyType,\r\n  payload\r\n})\r\n\r\nexport const validateCurrentUsernameAction = payload => ({\r\n  type: validateCurrentUsernameType,\r\n  payload\r\n})\r\n","import styled from 'styled-components'\r\nimport DifficultiesMenu from '~components/DifficultiesMenu/DifficultiesMenu'\r\nimport { setCurrentlyActiveUserDifficulty } from '~store/modules/Users/actions'\r\n\r\nconst DifficultySection = styled.div`\r\n  position: absolute;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n`\r\n\r\nconst InfoTextStyled = styled.span`\r\n  font-size: 24px;\r\n  color: #969696;\r\n`\r\n\r\nconst DifficultySelection = ({ className }) => {\r\n  return (\r\n    <DifficultySection className={`${className}`}>\r\n      <InfoTextStyled>CHOOSE DIFFICULTY</InfoTextStyled>\r\n      <DifficultiesMenu action={setCurrentlyActiveUserDifficulty} />\r\n      <span style={{ marginTop: '20px', width: '220px', textAlign: 'center' }}>\r\n        Choose difficulty for Your gameplay experience.\r\n      </span>\r\n    </DifficultySection>\r\n  )\r\n}\r\n\r\nexport default DifficultySelection\r\n","import generatedScssMediaOnlyRules from '~utilities/Responsivness.utilities'\r\nimport styled from 'styled-components'\r\n\r\nconst { phone: phoneMediaRule } = generatedScssMediaOnlyRules\r\n\r\nexport const AvatarMenuHolder = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  position: relative;\r\n  height: 460px;\r\n  width: 100%;\r\n\r\n  ${phoneMediaRule} {\r\n    height: 330px;\r\n    width: 100%;\r\n  }\r\n`\r\nexport const AvatarMenuStyled = styled.ul`\r\n  display: flex;\r\n  font-size: 48px;\r\n  font-weight: 900;\r\n  list-style: none;\r\n  transform: ${({ moveOffsetX }) => moveOffsetX};\r\n  transition: transform .2s ease;\r\n  position: absolute;\r\n`\r\n\r\nexport const ButtonsHolderStyled = styled.div`\r\n  display: flex;\r\n  height: 40px;\r\n  width: 330px;\r\n  color: #fff;\r\n  background-color: rgba(24, 24, 24, 1);\r\n  z-index: 999;\r\n  position: absolute;\r\n  bottom: 15px;\r\n\r\n  button {\r\n    margin: 0;\r\n    height: 100%;\r\n    width: 50%;\r\n    z-index: 999;\r\n    background: transparent;\r\n    border: none;\r\n    color: #fff;\r\n    font-size: 18px;\r\n    font-family: 'SulphurPoint-Regular';\r\n  }\r\n\r\n  ${phoneMediaRule} {\r\n    height: 30px;\r\n    width: 220px;\r\n    bottom: 25px;\r\n  }\r\n`","export default __webpack_public_path__ + \"static/media/avatar-one.a7424c3b.png\";","export default __webpack_public_path__ + \"static/media/avatar-one-vid.087b8849.webm\";","export default __webpack_public_path__ + \"static/media/avatar-two.78ba22d7.png\";","export default __webpack_public_path__ + \"static/media/avatar-two-vid.dad490c5.webm\";","export default __webpack_public_path__ + \"static/media/avatar-three.c4a19f3b.png\";","export default __webpack_public_path__ + \"static/media/avatar-three-vid.f5c3f006.webm\";","import AVATAR_ONE_IMG from '~static/images/avatars/avatar-one.png'\r\nimport AVATAR_ONE_VID from '~static/videos/avatar-one-vid.webm'\r\nimport AVATAR_TWO_IMG from '~static/images/avatars/avatar-two.png'\r\nimport AVATAR_TWO_VID from '~static/videos/avatar-two-vid.webm'\r\nimport AVATAR_THREE_IMG from '~static/images/avatars/avatar-three.png'\r\nimport AVATAR_THREE_VID from '~static/videos/avatar-three-vid.webm'\r\n\r\nexport const AVATARS = Object.freeze([\r\n  {\r\n    name: 'Auckes WITCHER',\r\n    image: AVATAR_ONE_IMG,\r\n    video: AVATAR_ONE_VID\r\n  },\r\n  {\r\n    name: 'Legolas ELF',\r\n    image: AVATAR_TWO_IMG,\r\n    video: AVATAR_TWO_VID\r\n  },\r\n  {\r\n    name: 'Aragorn Human',\r\n    image: AVATAR_THREE_IMG,\r\n    video: AVATAR_THREE_VID\r\n  }\r\n])\r\n\r\nexport const DEFAULT_ANIMATIONS = Object.freeze({\r\n  currentElementClass: 'entrence-fade-in',\r\n  usernameClass: 'leave-fade-out',\r\n  activeAvatarClass: 'move-avatar-back'\r\n})\r\n\r\nexport const NO_ANIMATIONS = Object.freeze({\r\n  currentElementClass: '',\r\n  usernameClass: '',\r\n  activeAvatarClass: ''\r\n})\r\n\r\nexport const ANIMATION_PAIRS = Object.freeze({\r\n  'entrence-fade-in': 'leave-fade-out',\r\n  'leave-fade-out': 'entrence-fade-in',\r\n  'move-avatar-back': 'move-avatar-top',\r\n  'move-avatar-top': 'move-avatar-back'\r\n})\r\n","import {\r\n  AvatarMenuHolder,\r\n  AvatarMenuStyled,\r\n  ButtonsHolderStyled\r\n} from './AvatarMenuStyled'\r\nimport Avatar from '~components/Avatar/Avatar'\r\nimport Indicators from '~components/Indicators/Indicators'\r\nimport {\r\n  AVATARS,\r\n  DEFAULT_ANIMATIONS,\r\n  NO_ANIMATIONS,\r\n  ANIMATION_PAIRS\r\n} from '~constants'\r\nimport {\r\n  useEffect,\r\n  useState,\r\n  useCallback\r\n} from 'react'\r\nimport {\r\n  useDispatch,\r\n  useSelector\r\n} from 'react-redux'\r\n\r\nconst AvatarMenu = ({\r\n  setShowUsernameField,\r\n  showUsernameField,\r\n  setClasses,\r\n  classes,\r\n  moveOffset,\r\n  children\r\n}) => {\r\n\r\n  // #region USE STATE\r\n  const [currentActiveAvatar, setCurrentActiveAvatar] = useState({ index: 1, avatar: AVATARS[1] })\r\n  // #endregion\r\n\r\n  // #region USE SELECTOR\r\n  const { validationErrorMessage } = useSelector(state => state.users)\r\n  // #endregion\r\n\r\n  // #region DISPATCH\r\n  const dispatch = useDispatch()\r\n\r\n  const setAvatarForCurrentlyActiveUser = useCallback(avatar => dispatch({ type: 'SET_CURRENTLY_ACTIVE_USER_AVATAR', payload: { avatar } }), [dispatch])\r\n  const validateCurrentUsername = useCallback(() => dispatch({ type: 'VALIDATE_CURRENT_USERNAME' }), [dispatch])\r\n  // #endregion\r\n\r\n  // #region METHODS\r\n  const changeAvatar = event => {\r\n    const { target: { name: direction } } = event\r\n\r\n    const isLeftClickedAndAvatarIsFirst = direction === 'left' && currentActiveAvatar.index === 0\r\n    const isLeftClickedAndAvatarIsLast = direction === 'right' && currentActiveAvatar.index === AVATARS.length - 1\r\n\r\n    if (isLeftClickedAndAvatarIsFirst || isLeftClickedAndAvatarIsLast) {\r\n      return\r\n    }\r\n\r\n    const indexOffset = direction === 'left' ? -1 : 1\r\n\r\n    setClasses({ ...NO_ANIMATIONS })\r\n    setCurrentActiveAvatar(({ index }) =>\r\n      ({ index: index + indexOffset, avatar: AVATARS[index + indexOffset] }))\r\n  }\r\n\r\n  const handleAvatarClick = () => {\r\n    setShowUsernameField(!showUsernameField)\r\n\r\n    let animationClasses = classes\r\n    if (\r\n      classes.activeAvatarClass === '' &&\r\n      classes.currentElementClass === '' &&\r\n      classes.activeAvatarClass === ''\r\n      ) {\r\n        animationClasses = DEFAULT_ANIMATIONS\r\n    }\r\n\r\n    const newState = {\r\n      currentElementClass: ANIMATION_PAIRS[animationClasses.currentElementClass],\r\n      usernameClass: ANIMATION_PAIRS[animationClasses.usernameClass],\r\n      activeAvatarClass: ANIMATION_PAIRS[animationClasses.activeAvatarClass]\r\n    }\r\n\r\n    setClasses({...newState})\r\n    setAvatarForCurrentlyActiveUser(currentActiveAvatar.avatar)\r\n    !validationErrorMessage && validateCurrentUsername()\r\n  }\r\n  // #endregion\r\n\r\n  // #region RENDER FUNCTIONS\r\n  const renderAvatars = () =>\r\n    AVATARS.reduce((renderingAvatars, currentAvatar) => {\r\n      const isActiveItem = currentAvatar.name === currentActiveAvatar.avatar.name\r\n\r\n      const avatarHTMLElement = (\r\n        <Avatar\r\n          key={currentAvatar.name}\r\n          playVideo={true}\r\n          className={!isActiveItem ? classes.currentElementClass : classes.activeAvatarClass}\r\n          currentActiveAvatar={currentAvatar}\r\n          isActiveItem={isActiveItem}\r\n          handleAvatarClick={handleAvatarClick}\r\n        />\r\n      )\r\n\r\n      renderingAvatars.push(avatarHTMLElement)\r\n\r\n      return renderingAvatars\r\n    }, [])\r\n  // #endregion\r\n\r\n  // #region USE EFFECT\r\n  useEffect(() => {\r\n    setAvatarForCurrentlyActiveUser(currentActiveAvatar.avatar)\r\n  }, [setAvatarForCurrentlyActiveUser, currentActiveAvatar])\r\n  // #endregion\r\n\r\n  return (\r\n    <>\r\n      <AvatarMenuHolder>\r\n        <AvatarMenuStyled\r\n          moveOffsetX={`translateX(${(~~(AVATARS.length / 2) - currentActiveAvatar.index) * moveOffset}px)`}>\r\n          { renderAvatars() }\r\n        </AvatarMenuStyled>\r\n        <ButtonsHolderStyled className={classes.currentElementClass}>\r\n          <button name=\"left\" onClick={event => changeAvatar(event)}>LEFT</button>\r\n          <button name=\"right\" onClick={event => changeAvatar(event)}>RIGHT</button>\r\n        </ButtonsHolderStyled>\r\n        {\r\n          children\r\n        }\r\n      </AvatarMenuHolder>\r\n      <Indicators className={classes.currentElementClass} number={AVATARS.length} currentActive={currentActiveAvatar.index} />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default AvatarMenu\r\n","import generatedScssMediaOnlyRules from '~utilities/Responsivness.utilities'\r\nimport styled from 'styled-components'\r\n\r\nconst { phone: phoneMediaRule } = generatedScssMediaOnlyRules\r\n\r\nexport const UsernameFieldStyled = styled.input`\r\n  height: 50px;\r\n  width: 330px;\r\n  border: none;\r\n  background-color: #00000036;\r\n  backdrop-filter: saturate(180%) blur(20px);\r\n  color: #fff;\r\n  font-size: 18px;\r\n  transition: .2s ease;\r\n  padding: 0 5px;\r\n  box-sizing: border-box;\r\n  text-transform: uppercase;\r\n  outline: 1px solid rgba(107, 28, 33, 0);\r\n  user-select: text;\r\n  position: absolute;\r\n  bottom: -20px;\r\n  z-index: 9999;\r\n\r\n  ::placeholder {\r\n    color: #969696;\r\n  }\r\n\r\n  :focus {\r\n    border: none;\r\n    outline: 1px solid rgba(107, 28, 33, .8);\r\n  }\r\n\r\n  :focus-within {\r\n    border: none;\r\n    outline: 1px solid rgba(107, 28, 33, .8);\r\n  }\r\n\r\n  :focus-visible {\r\n    border: none;\r\n    outline: 1px solid rgba(107, 28, 33, .8);\r\n  }\r\n\r\n  ${phoneMediaRule} {\r\n    height: 50px;\r\n    width: 220px;\r\n  }\r\n`\r\n\r\nexport const ErrorMessageHolder = styled.div`\r\n  color: #B22028;\r\n  height: 30px;\r\n  width: 330px;\r\n  font-size: 18px;\r\n  margin: 0 5px;\r\n  position: absolute;\r\n  bottom: -60px;\r\n\r\n  ${phoneMediaRule} {\r\n    width: 220px;\r\n    bottom: -60px;\r\n  }\r\n`","import { useCallback } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {\r\n  UsernameFieldStyled,\r\n  ErrorMessageHolder\r\n} from './UsernameFieldStyled'\r\n\r\nconst UsernameField = ({ classes }) => {\r\n\r\n    // #region USE SELECTOR\r\n    const { validationErrorMessage, currentActiveUser } = useSelector(state => state.users)\r\n    const { username } = currentActiveUser || {}\r\n    // #endergion\r\n\r\n    // #region DISPATCH\r\n    const dispatch = useDispatch()\r\n    const setUsernameForCurrentlyActiveUser = useCallback(username => dispatch({ type: 'SET_CURRENTLY_ACTIVE_USER_USERNAME', payload: { username } }), [dispatch])\r\n    // #endregion\r\n\r\n    // #region METHODS\r\n    const handleOnInputChange = event => {\r\n      const { target: { value: newUsername } = {} } = event || {}\r\n\r\n      setUsernameForCurrentlyActiveUser(newUsername?.toUpperCase())\r\n    }\r\n    // #endregion\r\n  return (\r\n    <>\r\n      <UsernameFieldStyled\r\n        className={`${classes.usernameClass} ${classes.activeAvatarClass}`}\r\n        type=\"username\"\r\n        name=\"username\"\r\n        placeholder=\"Your username\"\r\n        defaultValue={username || ''}\r\n        onChange={event => handleOnInputChange(event)}\r\n      />\r\n      <ErrorMessageHolder className={`${classes.usernameClass} ${classes.activeAvatarClass}`}>\r\n        <span>{validationErrorMessage}</span>\r\n      </ErrorMessageHolder>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default UsernameField\r\n","import { useCallback, useEffect, useState } from 'react'\r\n\r\nconst useMoveOffset = ({ moveOffsetMap }) => {\r\n  const [moveOffset, setMoveOffset] = useState(0)\r\n\r\n  const handleWindowSize = useCallback(() => {\r\n    let moveOffsetDevice = ''\r\n    if (window.innerWidth > 0 && window.innerWidth < 768) {\r\n      moveOffsetDevice = 'phone'\r\n    } else if (window.innerWidth >= 768 && window.innerWidth < 1024) {\r\n      moveOffsetDevice = 'tablet'\r\n    } else {\r\n      moveOffsetDevice = 'desktop'\r\n    }\r\n\r\n    setMoveOffset(moveOffsetMap[moveOffsetDevice])\r\n  }, [setMoveOffset, moveOffsetMap])\r\n\r\n  useEffect(() => {\r\n    handleWindowSize()\r\n  }, [handleWindowSize])\r\n\r\n  return [moveOffset]\r\n}\r\n\r\nexport default useMoveOffset\r\n","import { useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport AvatarMenu from '~components/AvatarMenu/AvatarMenu'\r\nimport UsernameField from '~components/UsernameField/UsernameField'\r\nimport { DEFAULT_ANIMATIONS } from '~constants'\r\nimport useMoveOffset from '~hooks/useMoveOffset'\r\n\r\n// #region STYLED_COMPONENTS\r\nconst AvatarSection = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 100%;\r\n  margin-top: 100px;\r\n`\r\n// #endregion\r\n\r\nconst MOVE_OFFSET_MAP = Object.freeze({\r\n  'phone': 230,\r\n  'tablet': 340,\r\n  'desktop': 340\r\n})\r\n\r\nconst AvatarSelection = ({ className }) => {\r\n  const [classes, setClasses] = useState({ ...DEFAULT_ANIMATIONS })\r\n  const [showUsernameField, setShowUsernameField] = useState(false)\r\n\r\n  const [moveOffset] = useMoveOffset({ moveOffsetMap: MOVE_OFFSET_MAP })\r\n\r\n  return (\r\n    <AvatarSection className={className}>\r\n      <AvatarMenu\r\n        setShowUsernameField={setShowUsernameField}\r\n        showUsernameField={showUsernameField}\r\n        moveOffset={moveOffset}\r\n        setClasses={setClasses}\r\n        classes={classes}\r\n      >\r\n        { showUsernameField && <UsernameField classes={classes} /> }\r\n      </AvatarMenu>\r\n      <span style={{ marginTop: '20px', width: '220px', textAlign: 'center' }}>\r\n        {\r\n          !showUsernameField ?\r\n          'Click on avatar to choose'\r\n          : 'Click again to get list back'\r\n        }\r\n      </span>\r\n    </AvatarSection>\r\n  )\r\n}\r\n\r\nexport default AvatarSelection\r\n","import { useState, useEffect, useCallback } from 'react'\r\nimport DifficultySelection from './components/DifficultySelection'\r\nimport AvatartSelection from './components/AvatarSelection'\r\nimport CONTROL_LEFT from '~static/images/control-left.svg'\r\nimport CONTROL_RIGHT from '~static/images/control-right.svg'\r\nimport ControlItemStyled from '~components/ControlItem/ControlItem'\r\nimport { useHistory } from 'react-router'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport Container from '~components/Container/Container'\r\n\r\nconst ROUTER_PUSH_MAP = {\r\n  'left': 'landing',\r\n  'right': 'game'\r\n}\r\n\r\nconst GameSetup = () => {\r\n  const [currentStep, setCurrentStep] = useState(0)\r\n  const [classes, setClasses] = useState(['entrance-from-right', 'entrance'])\r\n  // leftControlVisibility will always be true\r\n  // rightControlVisibility will depend on validationErrorMessage and current active step\r\n  const [areControlsVisible, setAreControlsVisible] = useState([false, false])\r\n\r\n  const history = useHistory()\r\n\r\n  const dispatch = useDispatch()\r\n  const addUserInAllUsers = useCallback(() => dispatch({ type: 'ADD_USER_IN_ALL_USERS' }), [dispatch])\r\n\r\n  const { validationErrorMessage } = useSelector(state => state.users)\r\n\r\n  const handleControlItemClick = event => {\r\n    const { target: { name: direction } } = event\r\n\r\n    if (currentStep === 0 && direction === 'right') {\r\n      timeout(setCurrentStep, 1)\r\n      setClasses(['leave-to-left', 'entrance-from-right'])\r\n    } else if (currentStep === 1 && direction === 'left') {\r\n      timeout(setCurrentStep, 0)\r\n      setClasses(['entrance-from-left', 'leave-to-right'])\r\n    } else {\r\n      direction === 'right' && addUserInAllUsers()\r\n\r\n      const path = ROUTER_PUSH_MAP[direction]\r\n      history.push(path)\r\n    }\r\n  }\r\n\r\n  const checkIfControlsShouldBeVisible = useCallback(() => {\r\n    const isUserOnAvatarSelection = currentStep === 1\r\n    const isUserOnDifficultySelection = currentStep === 0\r\n\r\n    const isRightControlVisible = isUserOnDifficultySelection || (validationErrorMessage === '' && isUserOnAvatarSelection)\r\n    setAreControlsVisible(() => [true, isRightControlVisible])\r\n  }, [currentStep, validationErrorMessage])\r\n\r\n  const timeout = (setState, newState) => {\r\n    const changeStepTimer = setTimeout(() => {\r\n      setState(newState)\r\n    }, 300)\r\n\r\n    return () => clearTimeout(changeStepTimer)\r\n  }\r\n\r\n  useEffect(() => {\r\n    checkIfControlsShouldBeVisible()\r\n  }, [checkIfControlsShouldBeVisible])\r\n\r\n  return (\r\n    <Container\r\n      horizontalAlign={'center'}\r\n      verticalAlign={'center'}\r\n    >\r\n      {\r\n        areControlsVisible[0] &&\r\n        <ControlItemStyled\r\n          name=\"left\"\r\n          src={CONTROL_LEFT}\r\n          position={'left'}\r\n          onClick={event => handleControlItemClick(event)}\r\n        />\r\n      }\r\n      {\r\n        areControlsVisible[1] &&\r\n        <ControlItemStyled\r\n          name=\"right\"\r\n          src={CONTROL_RIGHT}\r\n          position={'right'}\r\n          onClick={event => handleControlItemClick(event)}\r\n        />\r\n      }\r\n      {\r\n        currentStep === 0 &&\r\n        <DifficultySelection\r\n          className={classes[0]}\r\n        />\r\n      }\r\n      {\r\n        currentStep === 1 &&\r\n        <AvatartSelection\r\n          className={classes[1]}\r\n        />\r\n      }\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default GameSetup\r\n","import generatedScssMediaOnlyRules from '~utilities/Responsivness.utilities'\r\nimport styled from 'styled-components'\r\nimport { getHolderWidth } from '~utilities/UI.utilities'\r\nconst { phone: phoneMediaRule } = generatedScssMediaOnlyRules\r\n\r\nexport const AvatarHolder = styled.div`\r\ndisplay: flex;\r\nposition: relative;\r\nmargin: 20px;\r\n\r\n${phoneMediaRule} {\r\n  margin: 20px 0;\r\n}\r\n`\r\n\r\nexport const AvatarInfoHolder = styled.div`\r\nposition: absolute;\r\nheight: 100%;\r\nwidth: 100%;\r\nbackground: linear-gradient(180deg, #12121250, #121212);\r\nbox-sizing: border-box;\r\npadding: 30px;\r\n`\r\n\r\nexport const RankingStyled = styled.div`\r\ndisplay: flex;\r\nflex-wrap: wrap;\r\nalign-items: center;\r\nmargin: 70px 0;\r\n\r\n${({ dimensions: { width } }) => getHolderWidth(.9, width, 380)}\r\n\r\n${phoneMediaRule} {\r\n  ${({ dimensions: { width } }) => getHolderWidth(.9, width, 230)}\r\n}\r\n`\r\n\r\nexport const FilterSectionStyled = styled.div`\r\ndisplay: flex;\r\nflex-direction: column;\r\nalign-items: center;\r\nmargin-top: 50px;\r\n`","import { useState } from 'react'\r\nimport {\r\n  useDispatch,\r\n  useSelector\r\n} from 'react-redux'\r\nimport {\r\n  AvatarHolder,\r\n  AvatarInfoHolder,\r\n  RankingStyled\r\n} from '~containers/Ranking/RankingStyled'\r\nimport Avatar from '~components/Avatar/Avatar'\r\nimport AvatarInfo from '~components/AvatarInfo/AvatarInfo'\r\nimport useHolderWidth from '../../../hooks/useHolderWidth'\r\nimport styled from 'styled-components'\r\n\r\nconst ChooseOtherUserHolder = styled.div`\r\n  margin-top: 20px;\r\n  color: #f1f1f1;\r\n  z-index: 9999;\r\n`\r\n\r\nconst PlayerChoosSectionStyled = styled.div`\r\n  margin-top: 50px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`\r\n\r\nconst PlayerChooseSection = ({ className }) => {\r\n  const [isFocused, setIsFocused] = useState({ index: -1, focused: false })\r\n  const [currentStep, setCurrentStep] = useState(0)\r\n  const [classes, setClasses] = useState('')\r\n  \r\n  const [dimensions] = useHolderWidth()\r\n\r\n  const { allUsers, currentActiveUser } = useSelector(state => state.users)\r\n  \r\n  const dispatch = useDispatch()\r\n  const setNewCurrentActiveUser = newCurrentActiveUser => dispatch({ type: 'SET_NEW_CURRENT_ACTIVE_USER', payload: { newCurrentActiveUser } })\r\n \r\n  // #region METHODS\r\n  const handleUserItemClick = clickedUserData => {\r\n    clickedUserData.username !== currentActiveUser.username && switchSteps()\r\n    setNewCurrentActiveUser(clickedUserData)\r\n  }\r\n\r\n  const switchSteps = () => {\r\n    timeout(setCurrentStep, 1 - currentStep)\r\n    if (currentStep) { \r\n      setClasses('leave-to-right')\r\n    } else {\r\n      setClasses('entrance-from-right')\r\n    }\r\n  }\r\n\r\n  const timeout = (setState, newState) => {\r\n    const changeStepTimer = setTimeout(() => {\r\n      setState(newState)\r\n    }, 300)\r\n\r\n    return () => clearTimeout(changeStepTimer)\r\n  }\r\n  // #endregion\r\n\r\n  // #region RENDER METHODS\r\n  const renderSingleAvatar = ({ user, isActive, index }) => (\r\n    <AvatarHolder\r\n      key={user.username + index}\r\n      onClick={() => handleUserItemClick(user)}\r\n      onMouseEnter={() => setIsFocused({ index, focused: true })}\r\n      onMouseLeave={() => setIsFocused({ index, focused: false })}\r\n    >\r\n      <Avatar\r\n        playVideo={index === 0 ? isActive : (isFocused.index === index && isFocused.focused)}\r\n        isActiveItem={index === 0 ? isActive : (isFocused.index === index && isFocused.focused)}\r\n        currentActiveAvatar={user.avatar}\r\n      />\r\n      <AvatarInfoHolder>\r\n        <AvatarInfo avatarInfo={[\r\n          { info: user.username, label: 'USERNAME' },\r\n          { info: user?.difficulty?.toUpperCase(), label: 'DIFFICULTY' }\r\n        ]} />\r\n      </AvatarInfoHolder>\r\n    </AvatarHolder>\r\n  )\r\n  // #endregion\r\n\r\n  return (\r\n    <PlayerChoosSectionStyled className={className}>\r\n      <h2>COUNTINUE AS</h2>\r\n      { renderSingleAvatar({ user: currentActiveUser, isActive: true, index: 0 }) }\r\n      <ChooseOtherUserHolder>\r\n        <span onClick={() => switchSteps()}>{currentStep ? 'HIDE ALL USERS' : 'SHOW ALL USERS'}</span>\r\n      </ChooseOtherUserHolder>\r\n      {\r\n        currentStep === 1 &&\r\n        <RankingStyled className={classes} dimensions={dimensions}>\r\n        { allUsers.map((user, index) => renderSingleAvatar({ user, isActive: true, index: index + 1 })) }\r\n        </RankingStyled>       \r\n      }\r\n    </PlayerChoosSectionStyled>\r\n  )\r\n}\r\n\r\nexport default PlayerChooseSection\r\n","import CONTROL_LEFT from '~static/images/control-left.svg'\r\nimport CONTROL_RIGHT from '~static/images/control-right.svg'\r\nimport ControlItemStyled from '~components/ControlItem/ControlItem'\r\nimport { useHistory } from 'react-router'\r\nimport Container from '~components/Container/Container'\r\nimport PlayerChooseSection from './components/PlayerChooseSection'\r\nimport { useState } from 'react'\r\nimport DifficultySelection from '~containers/GameSetup/components/DifficultySelection'\r\n\r\nconst ROUTER_PUSH_MAP = {\r\n  'left': 'landing',\r\n  'right': 'game'\r\n}\r\n\r\nconst PlayerChoose = () => {\r\n  const [classes, setClasses] = useState(['entrance-from-right', 'entrance'])\r\n  const [currentStep, setCurrentStep] = useState(0)\r\n  const history = useHistory()\r\n\r\n  // #region METHODS\r\n  const handleControlItemClick = event => {\r\n    const { target: { name: direction } } = event\r\n\r\n    if (currentStep === 0 && direction === 'right') {\r\n      timeout(setCurrentStep, 1)\r\n      setClasses(['leave-to-left', 'entrance-from-right'])\r\n    } else if (currentStep === 1 && direction === 'left') {\r\n      timeout(setCurrentStep, 0)\r\n      setClasses(['entrance-from-left', 'leave-to-right'])\r\n    } else {\r\n      const path = ROUTER_PUSH_MAP[direction]\r\n      history.push(path)\r\n    }\r\n  }\r\n\r\n  const timeout = (setState, newState) => {\r\n    const changeStepTimer = setTimeout(() => {\r\n      setState(newState)\r\n    }, 300)\r\n\r\n    return () => clearTimeout(changeStepTimer)\r\n  }\r\n  // #endregion\r\n\r\n\r\n  return (\r\n    <Container horizontalAlign={'center'} verticalAlign={currentStep === 1 ? 'center' : ''}>\r\n      <ControlItemStyled\r\n        name=\"left\"\r\n        src={CONTROL_LEFT}\r\n        position={'left'}\r\n        onClick={event => handleControlItemClick(event)}\r\n      />\r\n      <ControlItemStyled\r\n        name=\"right\"\r\n        src={CONTROL_RIGHT}\r\n        position={'right'}\r\n        onClick={event => handleControlItemClick(event)}\r\n      />\r\n      {\r\n        currentStep === 0 &&\r\n        <PlayerChooseSection\r\n          className={classes[0]}\r\n        />\r\n      }\r\n      {\r\n        currentStep === 1 &&\r\n        <DifficultySelection\r\n          className={classes[1]}\r\n        />\r\n      }\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default PlayerChoose\r\n","import DifficultiesMenu from '~components/DifficultiesMenu/DifficultiesMenu'\r\nimport CONTROL_LEFT from '~static/images/control-left.svg'\r\nimport ControlItemStyled from '~components/ControlItem/ControlItem'\r\nimport { useHistory } from 'react-router'\r\nimport { useSelector } from 'react-redux'\r\nimport Container from '~components/Container/Container'\r\nimport { sortUsersByOrderAndDifficulty } from '~store/modules/Users/actions'\r\nimport Avatar from '~components/Avatar/Avatar'\r\nimport AvatarInfo from '~components/AvatarInfo/AvatarInfo'\r\nimport useHolderWidth from '~hooks/useHolderWidth'\r\nimport {\r\n  AvatarHolder,\r\n  AvatarInfoHolder,\r\n  RankingStyled,\r\n  FilterSectionStyled\r\n} from './RankingStyled'\r\n\r\nconst Ranking = () => {\r\n  const [dimensions] = useHolderWidth()\r\n\r\n  const history = useHistory()\r\n\r\n  const { ranking } = useSelector(state => state.users)\r\n\r\n  const handleControlItemClick = event => {\r\n    const { target: { name: path } } = event\r\n    history.push(path)\r\n  }\r\n\r\n  return (\r\n    <Container\r\n      horizontalAlign={'center'}\r\n    >\r\n      <ControlItemStyled\r\n        name=\"landing\"\r\n        src={CONTROL_LEFT}\r\n        position={'left'}\r\n        onClick={event => handleControlItemClick(event)}\r\n      />\r\n      <FilterSectionStyled>\r\n        <DifficultiesMenu action={sortUsersByOrderAndDifficulty} />\r\n      </FilterSectionStyled>\r\n      <RankingStyled className=\"entrance-from-right\" dimensions={dimensions}>\r\n        {\r\n          ranking.map((rank, index) =>\r\n            <AvatarHolder\r\n              key={rank.username + index}\r\n            >\r\n              <Avatar\r\n                isActiveItem={true}\r\n                currentActiveAvatar={rank.avatar}\r\n              />\r\n              <AvatarInfoHolder>\r\n                <AvatarInfo avatarInfo={[\r\n                  { info: `#${index + 1}`, label: 'RANK' },\r\n                  { info: rank.username, label: 'USERNAME' },\r\n                  { info: rank.score, label: 'SCORE' }\r\n                ]} />\r\n              </AvatarInfoHolder>\r\n            </AvatarHolder>\r\n          )\r\n        }\r\n      </RankingStyled>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Ranking\r\n","import Landing from '../containers/Landing/Landing'\r\nimport Game from '../containers/Game/Game'\r\nimport GameSetup from '../containers/GameSetup/GameSetup'\r\nimport PlayerChoose from '../containers/PlayerChoose/PlayerChoose'\r\nimport Ranking from '../containers/Ranking/Ranking'\r\n\r\n/**\r\n * @public\r\n * @readonly\r\n *\r\n * @description\r\n * Array of routes which will be used for creating Route components\r\n *\r\n */\r\nconst routes = Object.freeze([\r\n  {\r\n    path: '/landing',\r\n    component: Landing\r\n  },\r\n  {\r\n    path: '/game',\r\n    component: Game\r\n  },\r\n  {\r\n    path: '/game-setup',\r\n    component: GameSetup\r\n  },\r\n  {\r\n    path: '/player-choose',\r\n    component: PlayerChoose\r\n  },\r\n  {\r\n    path: '/ranking',\r\n    component: Ranking\r\n  }\r\n])\r\n\r\nexport default routes\r\n","import React, { useEffect, useCallback } from 'react'\r\nimport routes from '~routes'\r\nimport { Switch, Route, useHistory } from 'react-router-dom'\r\n\r\nconst DEFAULT_ROUTE_OPTIONS = { path: '', component: {} }\r\n\r\n/**\r\n * RouterSwitch component contains switch and routes for the application\r\n * @returns {JSX}\r\n */\r\nconst RouterSwitch = ({ redirectTo = '/' }) => {\r\n  const history = useHistory()\r\n\r\n  // Defensive approach for redirection, returns if specified path exists\r\n  const doesDestinationPathExist = useCallback(() =>\r\n    ~routes.findIndex(route => route.path === redirectTo), [redirectTo])\r\n\r\n  useEffect(() => {\r\n    if (doesDestinationPathExist()) {\r\n      history.push(redirectTo)\r\n    }\r\n  }, [\r\n    redirectTo,\r\n    history,\r\n    doesDestinationPathExist\r\n  ])\r\n\r\n  return (\r\n    <Switch>\r\n      { routes.map(({ component, path } = DEFAULT_ROUTE_OPTIONS) => (<Route exact path={path} component={component} key={path} />)) }\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default RouterSwitch\r\n","import RouterSwitch from '~router/RouterSwitch'\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport './main-style.scss'\n\n// first page to be open, as App.jsx is used only for\n// entrance in project, redirection and to apply base styles\nconst REDIRECT_TO = '/landing'\n\n/**\n * App component is an entry point for the application\n * and redirects user to Landing page\n *\n * @returns {JSX}\n */\nconst App = () => (\n  <Router>\n    <div className=\"app\">\n      <RouterSwitch redirectTo={REDIRECT_TO} />\n    </div>\n  </Router>\n)\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export default __webpack_public_path__ + \"static/media/card-1.d14f7d51.png\";","export default __webpack_public_path__ + \"static/media/card-2.7149424a.png\";","export default __webpack_public_path__ + \"static/media/card-3.fd88e2ae.png\";","export default __webpack_public_path__ + \"static/media/card-4.28bcab25.png\";","export default __webpack_public_path__ + \"static/media/card-5.b4b29f4f.png\";","export default __webpack_public_path__ + \"static/media/card-6.2cfd3661.png\";","export default __webpack_public_path__ + \"static/media/card-7.bb4aa743.png\";","export default __webpack_public_path__ + \"static/media/card-8.fc7a0444.png\";","export default __webpack_public_path__ + \"static/media/card-9.ef5a6ca6.png\";","export default __webpack_public_path__ + \"static/media/card-10.c8053b46.png\";","export default __webpack_public_path__ + \"static/media/card-11.4739dcfc.png\";","export default __webpack_public_path__ + \"static/media/card-12.ba1aed5b.png\";","export default __webpack_public_path__ + \"static/media/card-13.d47f8a0f.png\";","export default __webpack_public_path__ + \"static/media/card-14.a21052cc.png\";","export default __webpack_public_path__ + \"static/media/card-15.784913f5.png\";","import CARD_ONE from '~static/images/cards/card-1.png'\r\nimport CARD_TWO from '~static/images/cards/card-2.png'\r\nimport CARD_THREE from '~static/images/cards/card-3.png'\r\nimport CARD_FOUR from '~static/images/cards/card-4.png'\r\nimport CARD_FIVE from '~static/images/cards/card-5.png'\r\nimport CARD_SIX from '~static/images/cards/card-6.png'\r\nimport CARD_SEVEN from '~static/images/cards/card-7.png'\r\nimport CARD_EIGHT from '~static/images/cards/card-8.png'\r\nimport CARD_NINE from '~static/images/cards/card-9.png'\r\nimport CARD_TEN from '~static/images/cards/card-10.png'\r\nimport CARD_ELEVEN from '~static/images/cards/card-11.png'\r\nimport CARD_TWELVE from '~static/images/cards/card-12.png'\r\nimport CARD_THREETEN from '~static/images/cards/card-13.png'\r\nimport CARD_FOURTEEN from '~static/images/cards/card-14.png'\r\nimport CARD_FIFTEEN from '~static/images/cards/card-15.png'\r\n\r\nconst NUMBER_OF_UNIQUE_CARDS_BY_DIFFICULTY_LEVEL = {\r\n  'easy': 4,\r\n  'medium': 8,\r\n  'hard': 15\r\n}\r\n\r\nexport const generateGameCards = (difficulty = '') => {\r\n  const gameCards = []\r\n\r\n  const uniqueCards = getUniqueCards(difficulty)\r\n\r\n  for (const card of uniqueCards) {\r\n    const { cardId } = card\r\n\r\n    const cardOneId = cardId\r\n    const cardTwoId = `${cardId}-${cardId}`\r\n\r\n    const gameCardOne = { ...card, pair: cardTwoId }\r\n    const gameCardTwo = { ...card, cardId: cardTwoId, pair: cardOneId }\r\n\r\n    gameCards.push(gameCardOne)\r\n    gameCards.push(gameCardTwo)\r\n  }\r\n\r\n  return shuffleGameCards(gameCards)\r\n}\r\n\r\nexport const getUniqueCards = (difficulty = '') =>\r\n  Array(NUMBER_OF_UNIQUE_CARDS_BY_DIFFICULTY_LEVEL[difficulty])\r\n    .fill()\r\n    .map((_, index) => getSingleUniqueCard(index))\r\n\r\nexport const shuffleGameCards = (gameCards = []) => {\r\n  const shuffledGameCards = [...gameCards]\r\n  const { length: numberOfItems } = gameCards\r\n\r\n  let currentIndex = numberOfItems\r\n  let randomIndex\r\n\r\n  const { floor, random } = Math\r\n\r\n  while (currentIndex !== 0) {\r\n    const randomNumber = random() * (currentIndex)\r\n    randomIndex = floor(randomNumber)\r\n\r\n    currentIndex--\r\n\r\n    // eslint-disable-next-line\r\n    [shuffledGameCards[currentIndex], shuffledGameCards[randomIndex]]\r\n    = [shuffledGameCards[randomIndex], shuffledGameCards[currentIndex]]\r\n  }\r\n\r\n  return shuffledGameCards\r\n}\r\n\r\nconst IMAGE_INDEX_MAP = {\r\n  0: CARD_ONE,\r\n  1: CARD_TWO,\r\n  2: CARD_THREE,\r\n  3: CARD_FOUR,\r\n  4: CARD_FIVE,\r\n  5: CARD_SIX,\r\n  6: CARD_SEVEN,\r\n  7: CARD_EIGHT,\r\n  8: CARD_NINE,\r\n  9: CARD_TEN,\r\n  10: CARD_ELEVEN,\r\n  11: CARD_TWELVE,\r\n  12: CARD_THREETEN,\r\n  13: CARD_FOURTEEN,\r\n  14: CARD_FIFTEEN\r\n}\r\n\r\nconst getSingleUniqueCard = (index = -1) => ({\r\n    cardId: `memorize-card-${index}`,\r\n    image: IMAGE_INDEX_MAP[index],\r\n    flipped: false\r\n  }\r\n)\r\n","import { generateGameCards } from '../../../helpers/Memorize.helpers'\r\nimport GameplayActionTypes from './action-types'\r\n\r\nconst {\r\n  gameSetupType,\r\n  flipCardType,\r\n  compareFlippedCardType,\r\n  restartGameType,\r\n  calculatePointsType,\r\n  setGameEndType\r\n} = GameplayActionTypes\r\n\r\nconst flipCardResolver = (currentState, payload = {}) => {\r\n  const {\r\n    flippedCards: currentFlippedCards = [],\r\n    cards: currentCards = [],\r\n    numberOfGuesses: currentNumberOfGuesses = 0\r\n  } = currentState\r\n\r\n  const { cardId } = payload\r\n\r\n  const numOfFlippedCards = currentFlippedCards.length\r\n\r\n  const areTwoCardsFlipped = numOfFlippedCards === 2\r\n  const isClickedCardAlreadyFlipped = ~currentFlippedCards.findIndex(card => card.cardId === cardId)\r\n\r\n  // if there is two flipped cards user should not be able to flip another card\r\n  if (areTwoCardsFlipped || isClickedCardAlreadyFlipped) {\r\n    return currentState\r\n  }\r\n\r\n  const newState = { ...currentState }\r\n  const newCards = [...currentCards]\r\n  let newFlippedCards = []\r\n  const newNumberOfGuesses = currentNumberOfGuesses + 1\r\n\r\n  const clickedCardIndex = currentCards.findIndex(card => card.cardId === cardId)\r\n\r\n  const newFlippedCard = {\r\n    cardIndex: clickedCardIndex, // cardIndex in source array\r\n    card: currentCards[clickedCardIndex] // actual card data\r\n  }\r\n\r\n  newFlippedCards = [...currentFlippedCards, newFlippedCard]\r\n  newCards[clickedCardIndex].flipped = true\r\n\r\n  newState.cards = newCards\r\n  newState.flippedCards = newFlippedCards\r\n  newState.numberOfGuesses = newNumberOfGuesses\r\n\r\n  return newState\r\n}\r\n\r\nconst gameSetupResolver = (currentState, { difficulty = 'easy' } = {}) => {\r\n  const newState = { ...currentState }\r\n  // instead of using difficulty as payload read from logged user state\r\n  newState.cards = generateGameCards(difficulty)\r\n  newState.flippedCards = []\r\n  newState.isGameEnd = false\r\n  newState.numberOfGuesses = 0\r\n  newState.points = 0\r\n  newState.gameStart = new Date()\r\n\r\n  return newState\r\n}\r\n\r\nconst compareFlippedCardsResolver = currentState => {\r\n  const {\r\n    flippedCards: currentFlippedCards = [],\r\n    cards: currentCards = []\r\n  } = currentState\r\n\r\n  const [\r\n    { cardIndex: firstCardIndex, card: firstCard } = {},\r\n    { cardIndex: secondCardIndex, card: secondCard } = {}\r\n  ] = currentFlippedCards\r\n\r\n  const newState = { ...currentState }\r\n\r\n  const isMatch = firstCard.cardId === secondCard.pair\r\n\r\n  const newCards = [...currentCards]\r\n\r\n  newCards[firstCardIndex].discovered = isMatch\r\n  newCards[firstCardIndex].flipped = isMatch\r\n\r\n  newCards[secondCardIndex].discovered = isMatch\r\n  newCards[secondCardIndex].flipped = isMatch\r\n\r\n  const isGameEnd = newCards.filter(item => item.discovered).length === newCards.length\r\n\r\n  newState.isGameEnd = isGameEnd\r\n  newState.cards = newCards\r\n  newState.flippedCards = []\r\n\r\n  return newState\r\n}\r\n\r\nconst restartGameResolver = (currentState, payload) => gameSetupResolver(currentState, payload)\r\n\r\nconst POINTS_CALCULATOR_BY_DIFFICULTY = {\r\n  'easy': 1,\r\n  'medium': 3,\r\n  'hard': 6\r\n}\r\n\r\nconst calculatePoints = (currentState, { difficulty } = {}) => {\r\n  const { numberOfGuesses, cards } = currentState\r\n  const newState = { ...currentState }\r\n\r\n  const idealNumberOfGuesses = cards.length\r\n  const ratio = (idealNumberOfGuesses / numberOfGuesses)\r\n  const rationInPercentage = ratio * 100\r\n  const pointsValue = ratio * 10\r\n\r\n  let multiplyBy = 1\r\n\r\n  if (rationInPercentage > 75) {\r\n    multiplyBy = 5\r\n  } else if (rationInPercentage > 50) {\r\n    multiplyBy = 3\r\n  } else {\r\n    multiplyBy = 1\r\n  }\r\n\r\n  newState.points = (~~pointsValue) * POINTS_CALCULATOR_BY_DIFFICULTY[difficulty] * multiplyBy\r\n\r\n  return newState\r\n}\r\n\r\nconst setGameEnd = (currentState, payload) => {\r\n  const { gameEnd } = payload\r\n\r\n  return {\r\n    ...currentState,\r\n    gameEnd: `${gameEnd.hours}:${gameEnd.minutes}:${gameEnd.seconds}`\r\n  }\r\n}\r\n\r\nconst actionResolvers = {\r\n  [gameSetupType]: (state, payload) => gameSetupResolver(state, payload),\r\n  [flipCardType]: (state, payload) => flipCardResolver(state, payload),\r\n  [compareFlippedCardType]: state => compareFlippedCardsResolver(state),\r\n  [restartGameType]: (state, payload) => restartGameResolver(state, payload),\r\n  [calculatePointsType]: (state, payload) => calculatePoints(state, payload),\r\n  [setGameEndType]: (state, payload) => setGameEnd(state, payload)\r\n}\r\n\r\nexport default actionResolvers\r\n","import actionResolvers from './action-resolvers'\r\n\r\nconst initialState = {\r\n  cards: [],\r\n  flippedCards: [],\r\n  isGameEnd: false,\r\n  numberOfGuesses: 0,\r\n  points: 0,\r\n  gameStart: '',\r\n  gameEnd: ''\r\n}\r\n\r\nconst gameplayReducer = (currentState = initialState, { type, payload } = {}) => {\r\n  const actionResolver = type ? actionResolvers[type] : null\r\n\r\n  return actionResolver ? actionResolver(currentState, payload) : currentState\r\n}\r\n\r\nexport default gameplayReducer\r\n","export const saveStateIntoLocalStorage = (state = {}) => {\r\n  state = state || {}\r\n\r\n  for (const key in state) {\r\n    if (state.hasOwnProperty(key)) {\r\n      const value = JSON.stringify(state[key])\r\n      localStorage.setItem(key, value)\r\n    }\r\n  }\r\n}\r\n\r\nexport const loadStateFromLocalStorage = (state = '') => {\r\n  let loadedState\r\n\r\n  try {\r\n    const stateFromLocalStorage = localStorage.getItem(state)\r\n    // doesn't matter if value is null, we want to use it as well\r\n    loadedState = JSON.parse(stateFromLocalStorage)\r\n  } catch (error) {\r\n    loadedState = null\r\n  }\r\n\r\n  return loadedState\r\n}\r\n","// enum\r\nconst validationRules = Object.freeze({\r\n  lengthRule: {\r\n    rule: [3, 24],\r\n    message: `Minimal length is ${3} and max is ${24}`\r\n  }\r\n})\r\n\r\nexport const validateUsername = (users, username) => {\r\n  const [minLength, maxLength] = validationRules.lengthRule.rule\r\n  const usernameLength = username?.length\r\n\r\n  let errorMessage = validationRules.lengthRule.message\r\n  const isUsernameBetweenLengthThresholds = usernameLength >= minLength && usernameLength <= maxLength\r\n\r\n  if (isUsernameBetweenLengthThresholds) {\r\n    errorMessage = checkIfUserAlreadyExist(users, username) ? `Username: ${username} is already taken` : ''\r\n  }\r\n\r\n  return errorMessage\r\n}\r\n\r\nexport const checkIfUserAlreadyExist = (users = [], username = '') => !!~users?.findIndex(user => user?.username.toLowerCase() === username.toLowerCase())\r\n","import { saveStateIntoLocalStorage } from '~utilities/LocalStorage.utilities'\r\nimport { validateUsername, checkIfUserAlreadyExist } from '~helpers/Store.helpers'\r\n\r\nconst clearCurrentActiveUser = currentState => ({\r\n  ...currentState,\r\n  currentActiveUser: null\r\n})\r\n\r\nconst addUserInAllUsers = currentState => {\r\n  const { allUsers, ranking, currentActiveUser } = currentState\r\n  const user = { ...currentActiveUser, score: { [currentActiveUser.difficulty]: 0 } }\r\n  const newUsers = [...allUsers, user]\r\n\r\n  const newState = {\r\n    ...currentState,\r\n    allUsers: newUsers,\r\n    currentActiveUser: user,\r\n    validationErrorMessage: null // reset validationErrorMessage for new user validation\r\n  }\r\n\r\n  saveStateIntoLocalStorage({ users: {\r\n    allUsers: newUsers,\r\n    currentActiveUser: user,\r\n    ranking\r\n  }})\r\n\r\n  return newState\r\n}\r\n\r\nconst setDifficultyForCurrentlyActiveUser = (currentState, payload) => {\r\n  const { difficulty } = payload\r\n  const currentActiveUser = { ...currentState.currentActiveUser, difficulty }\r\n\r\n  return {\r\n    ...currentState,\r\n    currentActiveUser\r\n  }\r\n}\r\n\r\nconst setAvatarForCurrentlyActiveUser = (currentState, payload) => {\r\n  const { currentActiveUser } = currentState\r\n  const { avatar } = payload\r\n\r\n  const updatedCurrentActiveUser = { ...currentActiveUser, avatar }\r\n\r\n  return {\r\n    ...currentState,\r\n    currentActiveUser: updatedCurrentActiveUser\r\n  }\r\n}\r\n\r\nconst setUsernameForCurrentlyActiveUser = (currentState, payload) => {\r\n  const { allUsers, currentActiveUser } = currentState\r\n  const { username } = payload\r\n\r\n  const updatedCurrentActiveUser = { ...currentActiveUser, username }\r\n  const validationErrorMessage = validateUsername(allUsers, username)\r\n\r\n  return {\r\n    ...currentState,\r\n    validationErrorMessage,\r\n    currentActiveUser: updatedCurrentActiveUser\r\n  }\r\n}\r\n\r\nconst validateCurrentUsername = currentState => {\r\n  const { allUsers, currentActiveUser } = currentState\r\n  const { username } = currentActiveUser || {}\r\n\r\n  const validationErrorMessage = validateUsername(allUsers, username)\r\n\r\n  return {\r\n    ...currentState,\r\n    validationErrorMessage\r\n  }\r\n}\r\n\r\nconst updateScoreForCurrentlyActiveUser = (currentState, payload) => {\r\n  const {\r\n    currentActiveUser: {\r\n      score: currentScore = {},\r\n      difficulty = '',\r\n      username,\r\n      ...restUserData\r\n    },\r\n    allUsers\r\n  } = currentState\r\n  const { score: earnedCurrentGamePoints } = payload\r\n\r\n  // add new score to existing user's score\r\n  const newScore = difficulty ? { ...currentScore, [difficulty]: (currentScore[difficulty] || 0) + earnedCurrentGamePoints } : {}\r\n\r\n  const newUser = { ...restUserData, difficulty, username, score: newScore }\r\n  const userIndex = allUsers.findIndex(user => user.username === username)\r\n\r\n  const newAllUsers = [...allUsers]\r\n\r\n  if (~userIndex) {\r\n    newAllUsers[userIndex] = newUser\r\n  } else {\r\n    newAllUsers.push(newUser)\r\n  }\r\n\r\n  const newRanking =\r\n    [...newAllUsers]\r\n    .map((user = {}) => ({ ...user, score: (user.score && user.score[difficulty]) || 0 })) // get rid of nested score, return just value\r\n    .filter(user => !!user.score) // show only players with above zero\r\n    .sort((userOne = {}, userTwo = {}) => userTwo.score - userOne.score) // sort previously get value\r\n\r\n  const newState = {\r\n    ...currentState,\r\n    currentActiveUser: newUser,\r\n    allUsers: newAllUsers,\r\n    ranking: newRanking\r\n  }\r\n\r\n  saveStateIntoLocalStorage({ users: {\r\n    currentActiveUser: newUser,\r\n    allUsers: newAllUsers,\r\n    ranking: newRanking\r\n  } })\r\n\r\n  return newState\r\n}\r\n\r\nconst setTotalGamesPlayedForCurrentlyActiveUser = (currentState, payload) => ({currentState, payload})\r\n\r\nconst setTotalGamesFinishedForCurrentlyActiveUser = (currentState, payload) => ({currentState, payload})\r\n\r\nconst sortUsersByOrderAndDifficultyResolver = (currentState, payload) => {\r\n  const { allUsers } = currentState\r\n  const { difficulty } = payload\r\n\r\n  const newRanking =\r\n    [...allUsers]\r\n    .map((user = {}) => ({ ...user, score: user.score[difficulty] || 0 }))\r\n    .filter(user => !!user.score)\r\n    .sort((userOne = {}, userTwo = {}) => getSortByOrder(userOne.score, userTwo.score))\r\n\r\n  return {\r\n    ...currentState,\r\n    ranking: newRanking\r\n  }\r\n}\r\n\r\n// helper funtion\r\nconst getSortByOrder = (itemOne, itemTwo, order = 'desc') => order === 'asc' ? itemOne - itemTwo : itemTwo - itemOne\r\n\r\nconst setNewCurrentActiveUser = (currentState, payload) => {\r\n  const { newCurrentActiveUser } = payload\r\n\r\n  saveStateIntoLocalStorage({ users: {\r\n    allUsers: currentState.allUsers,\r\n    currentActiveUser: newCurrentActiveUser,\r\n    ranking: currentState.ranking\r\n  }})\r\n\r\n  return {\r\n    ...currentState,\r\n    currentActiveUser: newCurrentActiveUser\r\n  }\r\n}\r\n\r\nconst actionResolvers = {\r\n  'CLEAR': currentState => clearCurrentActiveUser(currentState),\r\n  'ADD_USER_IN_ALL_USERS': state => addUserInAllUsers(state),\r\n  'SET_NEW_CURRENT_ACTIVE_USER': (state, payload) => setNewCurrentActiveUser(state, payload),\r\n  'UPADTE_CURRENTLY_ACTIVE_USER_SCORE': (state, payload) => updateScoreForCurrentlyActiveUser(state, payload),\r\n  'SET_CURRENTLY_ACTIVE_USER_AVATAR': (state, payload) => setAvatarForCurrentlyActiveUser(state, payload),\r\n  'SET_CURRENTLY_ACTIVE_USER_USERNAME': (state, payload) => setUsernameForCurrentlyActiveUser(state, payload),\r\n  'SET_CURRENTLY_ACTIVE_USER_DIFFICULTY': (state, payload) => setDifficultyForCurrentlyActiveUser(state, payload),\r\n  'SET_CURRENTLY_ACTIVE_USER_TOTAL_GAMES_PLAYED': (state, payload) => setTotalGamesPlayedForCurrentlyActiveUser(state, payload),\r\n  'SET_CURRENTLY_ACTIVE_USER_TOTAL_GAMES_FINISHED': (state, payload) => setTotalGamesFinishedForCurrentlyActiveUser(state, payload),\r\n  'CHECK_IF_USER_ALREADY_EXIST': (state, payload) => checkIfUserAlreadyExist(state, payload),\r\n  'SORT_USERS_RANKING_BY_ORDER_AND_DIFFICULTY': (state, payload) => sortUsersByOrderAndDifficultyResolver(state, payload),\r\n  'VALIDATE_CURRENT_USERNAME': state => validateCurrentUsername(state)\r\n}\r\n\r\nexport default actionResolvers\r\n","import actionResolvers from './action-resolvers'\r\n\r\nconst initialState = {\r\n  allUsers: [],\r\n  currentActiveUser: null,\r\n  validationErrorMessage: null,\r\n  ranking: []\r\n}\r\n\r\nconst usersReducer = (currentState = initialState, { type, payload } = {}) => {\r\n  currentState = { ...initialState, ...currentState }\r\n\r\n  const actionResolver = type ? actionResolvers[type] : null\r\n\r\n  return actionResolver ? actionResolver(currentState, payload) : currentState\r\n}\r\n\r\nexport default usersReducer\r\n","import gameplay from './modules/Gameplay/reducer'\r\nimport users from './modules/Users/reducer'\r\n\r\nconst reducers = {\r\n  gameplay,\r\n  users\r\n}\r\n\r\nexport default reducers\r\n","import { loadStateFromLocalStorage } from './LocalStorage.utilities'\r\n\r\n// key for accessing local storage data which are saved\r\n// for cases when user closes/refreshes app and return again\r\n// currently it is users beacause module users is only one needed\r\nconst PERSISTED_MODULE_KEYS = ['users']\r\n\r\nexport const getPersistedState = () => {\r\n  const persistedState = {}\r\n\r\n  for (const moduleKey of PERSISTED_MODULE_KEYS) {\r\n    const loadedState = loadStateFromLocalStorage(moduleKey)\r\n    persistedState[moduleKey] = loadedState\r\n  }\r\n\r\n  return persistedState\r\n}\r\n","import reducers from './Memorize.reducers.store'\r\nimport { createStore, combineReducers } from 'redux'\r\nimport { getPersistedState } from '~utilities/Store.utilities'\r\nimport { PERSISTED_STATE_MOCK } from '../mock/mock'\r\n\r\n// combine all defined reducers into one reducer\r\nconst rootReducer = combineReducers(reducers)\r\n\r\n// get data from last time if there is any\r\nconst persistedState = getPersistedState()\r\n\r\nif (!persistedState?.users) {\r\n  persistedState.users = PERSISTED_STATE_MOCK\r\n}\r\n\r\n// put that data in store\r\nconst store = createStore(rootReducer, persistedState)\r\n\r\nexport default store\r\n","export const PERSISTED_STATE_MOCK = {\r\n  currentActiveUser: {\r\n    avatar: {\r\n      name: 'Aragorn ELF',\r\n      image: '/memory-game/static/media/avatar-three.c4a19f3b.png',\r\n      video: '/memory-game/static/media/avatar-three-vid.f5c3f006.webm',\r\n    },\r\n    difficulty: 'easy',\r\n    username: 'SDSFX',\r\n    score: {\r\n      easy: 50,\r\n    },\r\n  },\r\n  allUsers: [\r\n    {\r\n      avatar: {\r\n        name: 'Legolas ELF',\r\n        image: '/memory-game/static/media/avatar-two.78ba22d7.png',\r\n        video: '/memory-game/static/media/avatar-two-vid.dad490c5.webm',\r\n      },\r\n      difficulty: 'easy',\r\n      username: 'WDAASDWQEQ',\r\n      score: {\r\n        medium: 54,\r\n        hard: 108,\r\n        easy: 68,\r\n      },\r\n    },\r\n    {\r\n      avatar: {\r\n        name: 'Legolas ELF',\r\n        image: '/memory-game/static/media/avatar-two.78ba22d7.png',\r\n        video: '/memory-game/static/media/avatar-two-vid.dad490c5.webm',\r\n      },\r\n      difficulty: 'medium',\r\n      username: 'AW2A',\r\n      score: {\r\n        medium: 204,\r\n      },\r\n    },\r\n    {\r\n      avatar: {\r\n        name: 'Auckes WITCHER',\r\n        image: '/memory-game/static/media/avatar-one.a7424c3b.png',\r\n        video: '/memory-game/static/media/avatar-one-vid.087b8849.webm',\r\n      },\r\n      difficulty: 'medium',\r\n      username: 'ASASACCA',\r\n      score: {\r\n        medium: 54,\r\n      },\r\n    },\r\n    {\r\n      avatar: {\r\n        name: 'Auckes WITCHER',\r\n        image: '/memory-game/static/media/avatar-one.a7424c3b.png',\r\n        video: '/memory-game/static/media/avatar-one-vid.087b8849.webm',\r\n      },\r\n      difficulty: 'medium',\r\n      username: 'WAFAS',\r\n      score: {\r\n        medium: 0,\r\n      },\r\n    },\r\n    {\r\n      avatar: {\r\n        name: 'Legolas ELF',\r\n        image: '/memory-game/static/media/avatar-two.78ba22d7.png',\r\n        video: '/memory-game/static/media/avatar-two-vid.dad490c5.webm',\r\n      },\r\n      difficulty: 'easy',\r\n      username: 'FDSFS',\r\n      score: {\r\n        medium: 1350,\r\n        hard: 600,\r\n        easy: 50,\r\n      },\r\n    },\r\n    {\r\n      avatar: {\r\n        name: 'Legolas ELF',\r\n        image: '/memory-game/static/media/avatar-two.78ba22d7.png',\r\n        video: '/memory-game/static/media/avatar-two-vid.dad490c5.webm',\r\n      },\r\n      difficulty: 'medium',\r\n      username: 'DSFSDFS X',\r\n      score: {\r\n        medium: 300,\r\n      },\r\n    },\r\n    {\r\n      avatar: {\r\n        name: 'Aragorn ELF',\r\n        image: '/memory-game/static/media/avatar-three.c4a19f3b.png',\r\n        video: '/memory-game/static/media/avatar-three-vid.f5c3f006.webm',\r\n      },\r\n      difficulty: 'easy',\r\n      username: 'SDSFX',\r\n      score: {\r\n        easy: 50,\r\n      },\r\n    },\r\n  ],\r\n  ranking: [\r\n    {\r\n      avatar: {\r\n        name: 'Legolas ELF',\r\n        image: '/memory-game/static/media/avatar-two.78ba22d7.png',\r\n        video: '/memory-game/static/media/avatar-two-vid.dad490c5.webm',\r\n      },\r\n      difficulty: 'easy',\r\n      username: 'WDAASDWQEQ',\r\n      score: 68,\r\n    },\r\n    {\r\n      avatar: {\r\n        name: 'Legolas ELF',\r\n        image: '/memory-game/static/media/avatar-two.78ba22d7.png',\r\n        video: '/memory-game/static/media/avatar-two-vid.dad490c5.webm',\r\n      },\r\n      difficulty: 'easy',\r\n      username: 'FDSFS',\r\n      score: 50,\r\n    },\r\n    {\r\n      avatar: {\r\n        name: 'Aragorn ELF',\r\n        image: '/memory-game/static/media/avatar-three.c4a19f3b.png',\r\n        video: '/memory-game/static/media/avatar-three-vid.f5c3f006.webm',\r\n      },\r\n      difficulty: 'easy',\r\n      username: 'SDSFX',\r\n      score: 50,\r\n    },\r\n  ],\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from './store/Memorize.store'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}